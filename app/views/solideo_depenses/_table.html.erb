
<div  class="SD-table-box">
  <div class="SD-topo-box-title">
    <span>Suivi du budget des ouvrages</span>
  </div><br><br>


  <div class="budget-ouvrages">
    <% @dates_ouvrages_reporting.each_with_index do |date,i|%>
    <div class="budget-ouvrages-mois">
      <div class="box-convention-date"><%= l(date, format: "%e %B %Y") %> </div>
     
      <div class="row inline-flex">
        <div id="ouvrages<%=i%>"></div>
        <div class="convention-infos">
                <div class="reporting-text"><%=((Chantier.where('date = ?',date).sum('cumul_jalons')/Chantier.where('date = ?',date).sum('total_depenses_actees'))*100).round(1)%>% jalons validés</div>
                <div class="reporting-text"><%=((Chantier.where('date = ?',date).sum('cumul_paiements')/Chantier.where('date = ?',date).sum('total_depenses_actees'))*100).round(1)%>% paiements réalisés</div>
                <div class="reporting-text"><%=((Chantier.where('date = ?',date).sum('total_depenses_actees')-Chantier.where('date = ?',date).sum('cumul_paiements'))/1000000).round %>M€ subventions restants à venir</div>
                <div class="reporting-text"><%=((Chantier.where('date = ?',date).sum('paiements_annee')/Chantier.where('date = ?',date).sum('budget_annee'))*100).round(1)%>% execution budgétaire au titre de l'année 2021</div>
                <div class="reporting-text"><%=((Chantier.where('date = ?',date).sum('budget_annee')-Chantier.where('date = ?',date).sum('paiements_annee'))/1000000).round %>M€ subventions restant à verser au titre de l'année 2021</div>
                
              </div>
      </div> 
      
    </div>
        
    <script>
      Highcharts.chart('ouvrages<%=i%>', {
        chart: {
            type: 'column',
        height:'250px',

          backgroundColor: '#fff',
              style:{
              fontFamily: "Marianne Regular",
         
              },
        },
        title: {
            text: null,
            style: {
                      color: "#8F8F8F",
                      fontWeight: "400",
              fontStyle: 'italic',
              fontSize: '16px',
                      },
        },

        xAxis: {
            categories: ['Dépenses 2018', 'Dépenses 2019',  "Dépenses 2020", "Dépenses 2021", "Budget 2021", "Total dépenses", "Total engagés", "Jalons validés"],
            crosshair: true
        },
        yAxis: {
            min: 0,
            title: {
                text: 'Budget Consommé (M€)'
            },
          gridLineColor: "#fff",
        },
      legend: {
        enabled: false,
      },
        tooltip: {
            headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
            pointFormat: '<tr><td style="padding:0"><b>{series.name} : </b></td>' +
                '<td style="padding:0"><b> {point.y:.1f} M€</b></td></tr>',
            footerFormat: '</table>',
            shared: true,
            useHTML: true,
           borderColor: 'transparent',
       borderRadius: 16,
       backgroundColor: '#fff',
        },
        plotOptions: {
            column: {
                pointPadding: 0.2,
                borderWidth: 0,
                grouping: false,
              dataLabels: {
                    enabled: true
                }
            }
        },
        series: [{
            name: 'Budget année',
            data: [{y:17, color:"#2E5D63" },{y:16, color:"#2E5D63" },{y:33, color: "#2E5D63"},
            {y:<%=(Chantier.where('date = ?',date).sum('paiements_annee')/1000000).round(1)%>, color: "#2E5D63"},
            {y:<%=(Chantier.where('date = ?',date).sum('budget_annee')/1000000).round(1)%>, color: "#bfbfbf"},
            {y:<%=(Chantier.where('date = ?',date).sum('cumul_paiements')/1000000).round(1)%>, color: "#2E5D63"},
            {y:<%=(Chantier.where('date = ?',date).sum('total_depenses_actees')/1000000).round(1)%>, color: "#7D4E5B"},
            {y:<%=(Chantier.where('date = ?',date).sum('cumul_jalons')/1000000).round(1)%>, color: "#FFE800"}],
            pointPlacement: 0,
        }]
    });
     </script> 
   <% end %>
  </div>
</div>
<div  class="SD-table-box">
  <div class="SD-topo-box-title">
    <span>Suivi du budget fonctionnement </span>
  </div><br><br>
  <div class="row">
      <div class="col-md-12">
        <div id="container-2"></div>
      </div>
  </div><br>
</div>
<div  class="SD-table-box">
  <div class="SD-topo-box-title">
    <span>Suivi des fonds innovation </span>
  </div><br><br>
  <div class="row">   
      <div class="col-md-12">
        <div id="container-3"></div>
      </div>
  </div>
</div>
<div  class="SD-table-box">
  <div class="SD-topo-box-title">
    <span>Suivi des fonds réserve </span>
  </div><br><br>
  <div class="row"> 
      <div class="col-md-12">
        <div id="container-4"></div>     
      </div>
  </div><br><br>
  
</div><br><br>


<script>
Highcharts.chart('container-2', {

   chart:{
         backgroundColor: '#fff',
         zoomType: 'xy',
         height:'250px',
         style:{
         fontFamily: "Marianne Regular",
         //maxWidth: '500px'
          },       
          },

      title: {
        text:null,

        style: {
                color: "#8F8F8F",
                fontWeight: "400",
                fontStyle: 'italic',
                fontSize: '16px',
                  },
      },

    yAxis: [{ // Primary yAxis
        labels: {
            format: '{value} k€',
            style: {
                color: '#5770BE'
            }
        },
        title: {
            text: 'Montant en k€',
            style: {
                color: '#5770BE'
            }
        }
    }, { // Secondary yAxis
        title: {
            text: 'ETP',
            style: {
                color: '#76505B'
            }
        },
        labels: {
            format: '{value} ETP',
            style: {
                color: '#76505B'
            }
        },
        opposite: true
    }] ,
  tooltip: {
      shared: true,
       // valueSuffix: '€',
    borderColor: 'transparent',
   borderRadius: 16,
   backgroundColor: '#fff',
      
    },
  xAxis:{
      max: 2021,
     tickInterval: 1,
  },
    plotOptions: {
        series: {
            label: {
                connectorAllowed: false
            },
            pointStart: 2018,
         
        }
    },

  

    series: [ {
        name: 'ETP',
        type: 'column',
        yAxis: 1,
      color: '#76505B',
     
        data: [40,75,97],
       dataLabels: {
                enabled: true,
                verticalAlign: "center",
            }
      
    },{
        name: 'Dépenses',
      type: 'spline',
      color: '#5770BE',
        tooltip: {
            valueSuffix: ' k€',
        },
        data: <%= @depenses_annee_fonctionnement %>,
    }],



});
</script>
<% if !@dates_maquettes.nil?%>
<script>
Highcharts.chart('container-3', {

  chart:{
            backgroundColor: '#fff',
           type: 'areaspline',
          height:'250px',
        style:{
          fontFamily: "Marianne Regular",
        // maxWidth: '500px'
          },
       
          },

      title: {
        text:null,
  
        style: {
                  color: "#8F8F8F",
                  fontWeight: "400",
          fontStyle: 'italic',
      fontSize: '16px',
                  },
      },
  colors: ['#20E37B'],
    yAxis: {
      gridLineColor: '#fff', 
        title: {
            text: 'Total k€'
        }
    },
  tooltip: {
      //  pointFormat: '{series.name}: <b>{point.y}</b><br/>',
        valueSuffix: 'k€',
    borderColor: 'transparent',
   borderRadius: 16,
   backgroundColor: '#fff',
      
    },
  xAxis:{
    type: 'datetime',
  },
    plotOptions: {
        series: {
            label: {
                connectorAllowed: false
            },
        }
    },

  

    series: [{
        name: 'Evolution des fonds innovation',
        tooltip: {
          headerFormat: null,
           pointFormatter: function() {
              var point = this,
              series = point.series,
              firstDate = Highcharts.dateFormat('%e %b %Y', point.x),
              number = Highcharts.numberFormat(point.y, -1, ',',' '),
              header = '<span style="font-size: 12px">' + firstDate   + '</span><br/>',
               
              content =  '<b>Fonds restants : '+ number + ' k€</b><br/>';

            return header + content;
          },
        },
        data: [<% @dates_maquettes.each do |date|%> [Date.UTC(<%=date.year%>, <%=date.month%>,<%= date.day%>),<%=(Maquette.where('date = ? AND (name = ? OR name = ?)',date, "Fonds Innovation et Développement Durable", "Paris Fonds Vert").sum('total')/1000).round%>], <% end%>],
       dataLabels: {
                enabled: true,
            },
    }],

    responsive: {
        rules: [{
            condition: {
                maxWidth: 500
            },
            chartOptions: {
                legend: {
                    layout: 'horizontal',
                    align: 'center',
                    verticalAlign: 'bottom'
                }
            }
        }]
    }

});
</script>
<script>
Highcharts.chart('container-4', {

  chart:{
        backgroundColor: '#fff',
        type: 'areaspline',
        height:'250px',
        style:{
          fontFamily: "Marianne Regular",
          },
       
        },

        title: {
          text:null,
        },
  colors: ['#C68D7B'],
  yAxis: {
      gridLineColor: '#fff', 
        title: {
            text: 'Total k€'
        }
    },
  tooltip: {
      //  pointFormat: '{series.name}: <b>{point.y}</b><br/>',
      
   borderColor: 'transparent',
   borderRadius: 16,
   backgroundColor: '#fff',
      
    },
    xAxis:{
      type: 'datetime',
    },
    plotOptions: {
        series: {
            label: {
                connectorAllowed: false
            },
        }
    },

  

    series: [{
        name: 'Evolution de la réserve ',
        tooltip: {
          headerFormat: null,
           pointFormatter: function() {
              var point = this,
              series = point.series,
              firstDate = Highcharts.dateFormat('%e %b %Y', point.x),
              number = Highcharts.numberFormat(point.y, -1, ',',' '),
              header = '<span style="font-size: 12px">' + firstDate   + '</span><br/>',
               
              content =  '<b>Réserve restante : '+ number + ' k€</b><br/>';

            return header + content;
          },
        },
        data: [<% @dates_maquettes.each do |date|%> [Date.UTC(<%=date.year%>, <%=date.month%>,<%= date.day%>),<%=(Maquette.where('date = ? AND (name = ? OR name = ? OR name = ? OR name = ?)',date, "Réserve pour compléments de programme", "CPJ","Voies Olympiques [Réserve]", "Stade de France [Pertes d'exploitation]").sum('total')/1000).round%>], <% end%>],
       dataLabels: {
                enabled: true,
            },
             
    }],

    responsive: {
        rules: [{
            condition: {
                maxWidth: 500
            },
            chartOptions: {
                legend: {
                    layout: 'horizontal',
                    align: 'center',
                    verticalAlign: 'bottom'
                }
            }
        }]
    }

});
</script>
<% end %>