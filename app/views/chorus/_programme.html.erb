
<div class="SD-topo-box" id="dynamique-programme">
  <div class="SD-topo-box-title2">Visualisation du Programme <%= @search %> <% if ChorusNomenclature.where('nom = ?',@search).count > 0 %>- <%= ChorusNomenclature.where('nom = ?',@search).first.designation %><%end%></div><br>
  
  <div class="box-chiffres-chorus-box">
    <div class="box-chiffres-chorus">
      <div class="box-chiffres-chorus-lfi">LFI <br> <span><% if !@montant_lfi.nil? %><%= number_with_delimiter(@montant_lfi, :delimiter => ' ') %> €<% else%>Nil<%end %></span></div>
      <div class="box-chiffres-chorus-dispo">Crédits ouverts <br><span><% if !@montant_dispo.nil? %> <%= number_with_delimiter(@montant_dispo, :delimiter => ' ') %> €<% else%>Nil<%end %></span></div>
      <div class="box-chiffres-chorus-conso">Consommation <br><span> <%= number_with_delimiter(@montant_conso, :delimiter => ' ') %> €</span></div>
      <div class="box-chiffres-chorus-reserve">Réserve <br><span><% if !@montant_reserve.nil? %> <%= number_with_delimiter(@montant_reserve, :delimiter => ' ') %> €<% else%>Nil<%end %></span></div>
    </div>
  </div>
  
  <% if !@programme.nil? && @programme.count > 0%>
  <div class="row">
    <div class="col-md-offset-1 col-md-10">
      <div id="programme"></div>
    </div>
  </div>
  <br><br>
  
  <div class="button-chorus">
  <div class="button-chorus-box">
    <div class="button-chorus-tables" id="programme-bilan-btn">Afficher les bilans</div>
    <div class="button-chorus-tables" id="programme-tables-btn">Afficher les tables</div>
  </div>
  </div>
 
  <div class="ED_table" id="programme-bilan">
    <table class="table-striped">
      <thead>
        <tr>
          <th scope="col">Date</th>
          <% @type_pieces.each do |piece|%>
          <th scope="col"><a type="button" class="show-add-cursor" data-toggle="modal" data-target="#infospiece"><%= piece%></a></th>
          <% end %>

        </tr>
      </thead>

      <tbody>
        <% if !@dates.nil?%>

          <% @dates.each do |date| %>
            <tr>
              <td><%= l(Date.new(date.to_i,1,1), format: "%Y") %></td>
              <% @type_pieces.each do |piece|%>
                <td><%= number_with_delimiter(@programme.where('date >= ? AND date <= ? AND type_piece = ?',Date.new(date.to_i,1,1),Date.new(date.to_i,12,31),piece).sum('montant'), :delimiter => ' ') %> €</td>
              <% end %>

            </tr>
          <% end %>

        <% end %>
      </tbody>
    </table>
  </div>

  <div class="ED_table" id="programme-tables">
    <table class="table-striped">
      <thead>
        <tr>
          <th scope="col">Date</th>
          <th scope="col">Type piece</th>
          <th scope="col">Type budget</th>
          <th scope="col">Operation</th>
          <th scope="col">Centre financier</th>
          <th scope="col">Compte budgetaire</th>
          <th scope="col">Montant (€)</th>

        </tr>
      </thead>
      <% if !@programme.nil?%>
      <tbody>
        <% @dates.each do |date| %>
        <!-- total annuel -->
        <tr class="total-annuel">
            <td><%= l(Date.new(date.to_i,1,1), format: "%Y") %></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td><%= @budget %></td>
            <td><%= number_with_delimiter(@programme.where('date >= ? AND date <= ?',Date.new(date.to_i,1,1),Date.new(date.to_i,12,31)).sum('montant'), :delimiter => ' ') %></td>
        </tr><br>
        <% @programme.where('date >= ? AND date <= ?',Date.new(date.to_i,1,1),Date.new(date.to_i,12,31)).each do |choru| %>
          <tr>
            <td><%= l(choru.date, format: "%e %b %Y") %></td>
            <td><%= choru.type_piece %></td>
            <td><%= choru.type_budget %></td>
            <td><%= choru.operation %></td>
            <td><%= choru.centre_financier %></td>
            <td><%= choru.compte_budgetaire %></td>
            <td><%= number_with_delimiter(choru.montant, :delimiter => ' ') %></td>

          </tr>
        <% end %>
        
        <% end %>
      </tbody>
      <% end %>
    </table>
  </div>
  <br> 
  <% end %>
</div>

<% if !@programme.nil? && @programme.count > 0%>
<div class="SD-topo-box" id="dynamique-bop">
  <div class="SD-topo-box-title2">Visualisation des mouvements de crédits au niveau des BOP (<%= @bop_arr.length%>)</div>
  <br>
  <div class="chorus-dropdown-box">
     <div class="dropdown dropdown-chorus">
       <button class="btn btn-secondary dropdown-toggle dropdown-select-chorus" type="button" id="dropdownMenuButtonbop" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Sélectionner un BOP <i class="fas fa-chevron-down"></i></button>
        <div class="dropdown-menu dropwdown-menu-chorus" aria-labelledby="dropdownMenuButtonbop">
        <%= form_with url: select_bop_path(:date => @dates, :vision => @vision, :budget => @budget, :type_ae => @type_ae, :programme => @search), id: "bop_form" do |f|%>
            <label><%= f.check_box :search,{:multiple => true}, @search, nil %> Tout sélectionner </label>
          <% (0..@bop_arr.length-1).each do |i|%>
            <label><%= f.check_box :id,{:multiple => true}, @bop_arr[i], nil %>  <%= @bop_arr[i]%> <% if ChorusNomenclature.where('nom = ?',@bop_arr[i]).count > 0 %>(<%= ChorusNomenclature.where('nom = ?',@bop_arr[i]).first.designation %>)<%end%></label>
          
            
          <% end %>
          <div class="chorus-submit-form"><%= f.submit "Afficher", class: "submit-chorus submit-chorus-bop"%></div>
        <% end %>
       </div>
     </div>
  </div>
  <div class="row">
   <div class="col-md-offset-1 col-md-10">
      <div id="bop">
       <%= render 'chorus/bop'%>
      </div>  
   </div>
  </div>
     
  <br><br>
  <div id='tableau_bop'>
   <%= render 'chorus/tableau_bop'%>
  </div>
</div>

</div>

<div id="uo_bloc">
  <%= render 'chorus/uo_bloc'%>
</div>




<script>
  $('#programme_form input').click(function(){
$('#programme_form').submit();
});
</script>


<script>
  var elementid = '#id_'+'<%= @bop.first.centre_financier.downcase%>';
  $(elementid).prop('checked', true);


</script>
<script>
  $('#programme-bilan').hide();
  $('#programme-tables').hide();
  $('#programme-tables-btn').click(function () {
    if ($('#programme-tables').hasClass('visible')){
    $('#programme-tables').hide();
      $('#programme-tables').removeClass('visible');
    }else {
     $('#programme-tables').show(); 
      $('#programme-tables').addClass('visible');
    }
  });
 $('#programme-bilan-btn').click(function () {
    if ($('#programme-bilan').hasClass('visible')){
    $('#programme-bilan').hide();
      $('#programme-bilan').removeClass('visible');
    }else {
     $('#programme-bilan').show(); 
      $('#programme-bilan').addClass('visible');
    }
  });
</script>
<script>
  var searchid = '#search_' + '<%= @search %>';

$(searchid).click(function () {
  if ($(searchid).is(':checked')){
   <% @bop_arr.each do |bop|%>
      $('#id_'+'<%= bop.downcase%>').prop('checked', true);
   <% end %> 
  }
  else {
   <% @bop_arr[1..].each do |bop|%>
      $('#id_'+'<%= bop.downcase%>').prop('checked', false);
   <% end %>  
 
  }
  
});
$('.submit-chorus-bop').on("click",function(){  
   $("#dropdownMenuButtonbop").dropdown('toggle');
});
</script>
<script>
  
Highcharts.stockChart('programme', {
 // mapNavigation: {
 //           enableMouseWheelZoom: true
 //       },
   chart:{
       backgroundColor: '#fff',
       borderColor: '#fff',
       type: 'scatter',
     height: '600px',
    // width: '2000px',
       spacing: [40,40,40,40],
        style:{
          fontFamily: "Marianne Regular",
          // maxWidth: '500px'
          },
      
        zoomType: 'x',
      //  borderWidth: 1,
      //  resetZoomButton: {
      //      position: {
           
       //         x: -10,
        //        y: 10
       //     },
       //     relativeTo: 'chart'
      //  },
    // scrollablePlotArea: {
    //   minWidth: 2000,
   //    scrollPositionX:1,
   //  },
          },
  navigator: {
        maskFill: 'rgba(248,248,248,0.3)',
    },

  rangeSelector: {

            buttons: [ {
                type: 'month',
                count: 1,
                text: '1m'
            }, {
                type: 'month',
                count: 3,
                text: '3m'
            },{
                type: 'month',
                count: 6,
                text: '6m'
            }, {
                type: 'year',
                count: 1,
                text: '1an'
            }, {
                type: 'all',
                text: 'Tout'
            }],
            selected: 3,
            buttonTheme: { // styles for the buttons
            fill: '#F8F8F8',
            stroke: 'none',
            'stroke-width': 0,
            r: 4,
            style: {
                color: '#000',
                fontWeight: 'bold'
            },
            states: {
                hover: {
                },
                select: {
                    fill: '#000091',
                    style: {
                        color: 'white'
                    }
                }
                // disabled: { ... }
            }
        },
        inputStyle: {
                color: '#000',
              
            },
        labelStyle: {
            color: '#000', 
        },
        },
  legend: {
    enabled: true,
    verticalAlign: 'top',
  
  },
    title: {
            text:"",
    },
 
    yAxis: {
      gridLineColor: '#fff', 
        title: {
            text: 'Total k€'
        }
    },
  scrollbar: {
    barBackgroundColor: '#CECECE',
    barBorderColor: "#F8F8F8",
    barBorderRadius: 6,
    buttonBackgroundColor: "#F8F8F8",
    buttonArrowColor:'#CECECE',
    buttonBackgroundColor:"#F8F8F8",
    buttonBorderColor:"#F8F8F8",
    buttonBorderRadius: 6,
    rifleColor:"#F8F8F8",
  },
  tooltip: {
   

    borderColor: 'transparent',
   borderRadius: 16,
   backgroundColor: '#fff',
    },
  xAxis:{
    type: 'datetime',
  //  tickInterval: 30 * 24 * 3600 * 1000,
  // tickPixelInterval:200,
  },
  yAxis: {
    plotLines: [{
      color: '#FF6F4C',
      label: {
        text: "LFI",
        textAlign: 'left',
        verticalAlign: 'middle',
        
        x: -30,
        style: {
          color:'#FF6F4C',
        },
      },
      zIndex: 1,
      width: 2,
      value: <%= @programme.where('type_budget = ? OR type_budget = ?',  "Bud. voté ou en cours de vote","Loi de Finances Initiale").first.montant.to_f/1000 %>,
    }],
  },
    plotOptions: {
        series: {
          lineWidth: 2,
            label: {
                connectorAllowed: false
            }, 
            marker: {
                enabled: true,
                radius:2,
            },
          step: 'left',
        }
    },
 
  
    series: [
      <% if @vision == "0" || @vision == "2"%> 
      {
        name: 'Crédits ouverts',
        color: '#2E5D63',
        tooltip: {
           pointFormatter: function() {
      var point = this,
          series = point.series,
        firstDate = Highcharts.dateFormat('%e %b %Y', point.x),
        number = Highcharts.numberFormat(point.y, -1, ',',' '),
        header = '<span style="font-size: 12px">' + firstDate   + '</span><br/>',
         
        content =  point.name + '<br/>'+ '<b>Crédits ouverts : '+ number + ' k€</b><br/>';

      return header + content;
    },
        },
        data: [
          <% @dates.each do |date| %>
          <% @montant = 0 %>
         
          <% @programme.where('date >= ? AND date <= ? AND type_piece != ?', Date.new(date.to_i,1,1), Date.new(date.to_i,12,31), 'MADI').each do |programme| %>
            <% if programme.type_budget == "Bud. voté ou en cours de vote" || programme.type_budget == "Loi de Finances Initiale" %>
            <% @montant =  programme.montant %>
            {name:  '<%= programme.type_budget.to_s %> : <%= number_with_delimiter((programme.montant.to_f/1000).round, :delimiter => ' ').to_s %> k€', x: Date.UTC(<%=programme.date.year%>,<%= programme.date.month-1%>, <%=programme.date.day%>), y: <%= (programme.montant.to_f/1000).round%>,}, 
            <% elsif programme.type_piece == "RB" %>
            {name:  '<%= programme.type_budget.to_s%> : <%= number_with_delimiter((programme.montant.to_f/1000).round, :delimiter => ' ').to_s %> k€', x: Date.UTC(<%=programme.date.year%>,<%= programme.date.month-1%>, <%=programme.date.day%>),y: <%=  ((@montant - programme.montant).to_f/1000).round%>,  },
          <% @montant = @montant - programme.montant %>
            <% else %>              
            {name:  '<%= programme.type_budget.to_s%> : <%= number_with_delimiter((programme.montant.to_f/1000).round, :delimiter => ' ').to_s %> k€', x: Date.UTC(<%=programme.date.year%>,<%= programme.date.month-1%>, <%=programme.date.day%>),y: <%=  ((@montant + programme.montant).to_f/1000).round%>,  },
            <% @montant = @montant + programme.montant %>
            <% end %> 
          <% end %>
          <% end %>
        ],
        fillColor: {
                linearGradient: {
                    x1: 0,
                    y1: 0,
                    x2: 0,
                    y2: 1
                },
                stops: [
                    [0, "#2E5D63"],
                    [1, Highcharts.color("#2E5D63").setOpacity(0).get('rgba')]
                ]
            },
     
    }, {
        name: 'Crédits ouverts + Réserve',
      color: '#C68D7B',
        data: [
          <% @dates.each do |date| %>
          <% @montant = 0 %>
         
          <% @programme.where('date >= ? AND date <= ? AND type_piece != ? AND type_piece != ?', Date.new(date.to_i,1,1), Date.new(date.to_i,12,31), 'MADI', 'RB').each do |programme| %>
            <% if programme.type_budget == "Bud. voté ou en cours de vote" || programme.type_budget == "Loi de Finances Initiale" %>
            <% @montant =  programme.montant %>
            {name:  '<%= programme.type_budget.to_s %> : <%= number_with_delimiter((programme.montant.to_f/1000).round, :delimiter => ' ').to_s %> k€', x: Date.UTC(<%=programme.date.year%>,<%= programme.date.month-1%>, <%=programme.date.day%>), y: <%= (programme.montant.to_f/1000).round%>,}, 
            
            <% else %>              
            {name:  '<%= programme.type_budget.to_s%> : <%= number_with_delimiter((programme.montant.to_f/1000).round, :delimiter => ' ').to_s %> k€', x: Date.UTC(<%=programme.date.year%>,<%= programme.date.month-1%>, <%=programme.date.day%>),y: <%=  ((@montant + programme.montant).to_f/1000).round%>,  },
            <% @montant = @montant + programme.montant %>
            <% end %> 
          <% end %>
          <% end %>
        ],
      tooltip: {
           pointFormatter: function() {
      var point = this,
        series = point.series,
        firstDate = Highcharts.dateFormat('%e %b %Y', point.x),
        number = Highcharts.numberFormat(point.y, -1, ',',' '),
        header = '<span style="font-size: 12px">' + firstDate   + '</span><br/>',
         
        content =   point.name + '<br/>'+ '<b>Crédits ouverts + réserve: '+ number + ' k€</b><br/>';

      return header + content;
    },
      },
    
    },
      <% if Choru.where('centre_financier like ?','%'+@search+'%').where('date >= ? AND date <= ? AND type_ae = ?', Date.new(2020,1,1), Date.new(2020,12,31), @type_ae).where.not(domaine_fonctionnel: nil).count > 0%>
      {
        name: 'Consommation',
      color: '#000091',
       
        data: [
  
          <% @montant = 0 %>
         [Date.UTC(2020,1,1),0],
          <% if @budget == "T2"%>
          <% Choru.where('centre_financier like ?','%'+@search+'%').where('date >= ? AND date <= ? AND type_ae = ? AND (compte_budgetaire = ? OR compte_budgetaire = ? OR compte_budgetaire = ? OR compte_budgetaire = ? OR compte_budgetaire = ? OR compte_budgetaire = ?)', Date.new(2020,1,1), Date.new(2020,12,31), @type_ae, "21","22","23","24","25","26").where.not(domaine_fonctionnel: nil).order('date ASC').each do |programme| %>
                 
            [ Date.UTC(<%=programme.date.year%>,<%= programme.date.month-1%>, <%=programme.date.day%>), <%=  ((@montant + programme.montant).to_f/1000).round%>],
            <% @montant = @montant + programme.montant %>
            <% end %> 
          <% else %>
           <% Choru.where('centre_financier like ?','%'+@search+'%').where('date >= ? AND date <= ? AND type_ae = ? AND (compte_budgetaire != ? AND compte_budgetaire != ? AND compte_budgetaire != ? AND compte_budgetaire != ? AND compte_budgetaire != ? AND compte_budgetaire != ?)', Date.new(2020,1,1), Date.new(2020,12,31), @type_ae, "21","22","23","24","25","26").where.not(domaine_fonctionnel: nil).order('date ASC').each do |programme| %>
                 
            [ Date.UTC(<%=programme.date.year%>,<%= programme.date.month-1%>, <%=programme.date.day%>), <%=  ((@montant + programme.montant).to_f/1000).round%>],
            <% @montant = @montant + programme.montant %>
            <% end %> 
          
          <% end %>
   
        ],
        tooltip: {
   
     pointFormatter: function() {
      var point = this,
       firstDate = Highcharts.dateFormat('%e %b %Y', point.x),
        number = Highcharts.numberFormat(point.y, -1, ',',' '),   
          header = '<span style="font-size: 12px">' + firstDate   + '</span><br/>',
        content =  '<b>Montant consommé : '+ number + ' k€</b><br/>';
        return header + content;
    },
    },
      },

      <% end %>
      
      <% end %>
      <% if @vision == "1" || @vision == "2"%> 
             {
        name: 'Mouvements',
        color: '#20E37B',
         tooltip: {
           pointFormatter: function() {
      var point = this,
        series = point.series,
        firstDate = Highcharts.dateFormat('%e %b %Y', point.x),
        number = Highcharts.numberFormat(point.y, -1, ',',' '),
        header = '<span style="font-size: 12px">' + firstDate  + '</span><br/>',
         
        content =  point.name + '<br/>'+'<b>Disponible : '+ number + ' k€</b><br/>';

      return header + content;
    },
      },
        data: [
          <% @dates.each do |date| %>
          <% @montant = 0 %>
       
          <% @programme.where('date >= ? AND date <= ?', Date.new(date.to_i,1,1), Date.new(date.to_i,12,31)).each do |programme| %>
            <% if programme.type_budget == "Bud. voté ou en cours de vote" || programme.type_budget == "Loi de Finances Initiale" %>
            <% @montant =  programme.montant %>
            {name:  '<%= programme.type_budget.to_s %> : <%= number_with_delimiter((programme.montant.to_f/1000).round, :delimiter => ' ').to_s %> k€', x: Date.UTC(<%=programme.date.year%>,<%= programme.date.month-1%>, <%=programme.date.day%>), y: <%= (programme.montant.to_f/1000).round%>,}, 
            <% else %>              
            {name:  '<%= programme.type_budget.to_s%> : <%= number_with_delimiter((programme.montant.to_f/1000).round, :delimiter => ' ').to_s %> k€', x: Date.UTC(<%=programme.date.year%>,<%= programme.date.month-1%>, <%=programme.date.day%>),y: <%=  ((@montant + programme.montant).to_f/1000).round%>,  },
            <% @montant = @montant + programme.montant %>
            <% end %> 
          <% end %>
          <% end %>
        ],
               
    
    },
      <% end %>  
            ],

    responsive: {
        rules: [{
            condition: {
                maxWidth: 500
            },
            chartOptions: {
                legend: {
                    layout: 'horizontal',
                    align: 'center',
                    verticalAlign: 'bottom'
                }
            }
        }]
    }

});
</script>

<% end %>