<div  class="box_page">
   <div><span class="titre_section">Répartition annuelle des dépenses de l'état par action</span>
  </div>
  <div class="i24"></div>
  <div class="i12"></div>
  <div class='text-center'>
  <div class="inline-flex"><div id="cp_button" class="bouton">Visualisation des CP</div><div id="ae_button" class="bouton_unselected">Visualisation des AE</div></div>
  </div>
  <div class="i40"></div>

  <!-- suivi des cp -->
  <div id="cp">
    <div class="row">
      <div class="col-md-12">
        <div id="bar-solideo"></div>
      </div>   
    </div>
    <div class="i40"></div>
   
    <div class='titre_tableau'>Tableau répartition annuelle des dépenses de l'état en K€ (CP consommés / CP prévus)
    </div>
    <div class="i12"></div>
    <% if !@etat_depenses_array.nil? && !@etat_depenses_array.empty? %>
      <div class="ED_table hidden-xs">
        <table class="table-striped">
          <thead>
            <tr>
              <th scope="col">Dates</th>
              <th scope="col"><%= link_to solideo_depenses_path do %>Solideo<%end%></th>
              <th scope="col">Cojo</th>
              <th scope="col">Héritage</th>
              <th scope="col">Autres</th>
              <th scope="col" class="border-none">Total</th>
            </tr>
          </thead>
          <tbody>
            <% @etat_depenses_array.each do |date| %>
            <tr>
              <th scope="row"><%= date.strftime('%Y') %></th>
              <td><div class="table-row"><div class="table-row-left"><%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "solideo", date+1.day,date-1.day ).sum('cp_conso')/1000).to_i, :delimiter => ' ') %> </div> <div class="table-row-right"> / <%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ? ', "solideo",date+1.day, date-1.day).sum('cp_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "solideo", date+1.day,date-1.day ).sum('cp_conso').to_i > EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "solideo", date+1.day,date-1.day ).sum('cp_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></div></div></td>
              <td><div class="table-row"><div class="table-row-left"><%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "cojo", date+1.day,date-1.day ).sum('cp_conso')/1000).to_i, :delimiter => ' ') %> </div> <div class="table-row-right"> / <%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "cojo", date+1.day, date-1.day).sum('cp_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "cojo", date+1.day,date-1.day ).sum('cp_conso').to_i > EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "cojo", date+1.day,date-1.day ).sum('cp_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></div></div></td>
              <td><div class="table-row"><div class="table-row-left"><%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "heritage", date+1.day, date-1.day ).sum('cp_conso')/1000).to_i, :delimiter => ' ') %> </div> <div class="table-row-right"> / <%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ? ', "heritage",date+1.day, date-1.day).sum('cp_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "heritage", date+1.day,date-1.day ).sum('cp_conso').to_i > EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "heritage", date+1.day,date-1.day ).sum('cp_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></div></div> </td>
              <td><div class="table-row"><div class="table-row-left"><%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "hauteperformance",date+1.day, date-1.day).sum('cp_conso')/1000).to_i, :delimiter => ' ') %> </div> <div class="table-row-right"> / <%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ? ', "hauteperformance",date+1.day, date-1.day).sum('cp_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "hauteperformance", date+1.day,date-1.day ).sum('cp_conso').to_i > EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "hauteperformance", date+1.day,date-1.day ).sum('cp_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></div></div></td>
              <td class="border-none"><div class="table-row"><div class="table-row-left"><%= number_with_delimiter((EtatDepense.where('date <= ? AND date >= ?', date+1.day, date-1.day).sum('cp_conso')/1000).to_i, :delimiter => ' ') %> </div> <div class="table-row-right"> / <%= number_with_delimiter((EtatDepense.where('date <= ? AND date >= ? ',date+1.day, date-1.day).sum('cp_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('date <= ? AND date >= ?', date+1.day,date-1.day ).sum('cp_conso').to_i > EtatDepense.where('date <= ? AND date >= ?', date+1.day,date-1.day ).sum('cp_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></div></div></td>
            </tr>
            <% end %>
          </tbody>
        </table>
      </div>
    
      <div class="ED_table visible-xs">
        <table class="table-striped">
          <thead></thead>
           
          <tbody>
           <% @etat_depenses_array.each do |date| %>
            <tr><td>
            
              <div class="table-row-xs"><b><%= date.strftime('%Y') %></b></div>
            
              <div class="table-row-xs">SOLIDEO <span class="pull-right"><%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "solideo", date+1.day,date-1.day ).sum('cp_conso')/1000).to_i, :delimiter => ' ') %>  / <%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ? ', "solideo",date+1.day, date-1.day).sum('cp_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "solideo", date+1.day,date-1.day ).sum('cp_conso').to_i > EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "solideo", date+1.day,date-1.day ).sum('cp_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></span></div>
                
              <div class="table-row-xs">COJO <span class="pull-right"><%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "cojo", date+1.day,date-1.day ).sum('cp_conso')/1000).to_i, :delimiter => ' ') %> / <%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "cojo", date+1.day, date-1.day).sum('cp_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "cojo", date+1.day,date-1.day ).sum('cp_conso').to_i > EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "cojo", date+1.day,date-1.day ).sum('cp_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></span></div>
                
              <div class="table-row-xs">HÉRITAGE <span class="pull-right"><%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "heritage", date+1.day, date-1.day ).sum('cp_conso')/1000).to_i, :delimiter => ' ') %> / <%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ? ', "heritage",date+1.day, date-1.day).sum('cp_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "heritage", date+1.day,date-1.day ).sum('cp_conso').to_i > EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "heritage", date+1.day,date-1.day ).sum('cp_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></span></div> 
                
              <div class="table-row-xs" >HAUTEPERFORMANCE <span class="pull-right"><%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "hauteperformance",date+1.day, date-1.day).sum('cp_conso')/1000).to_i, :delimiter => ' ') %>  / <%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ? ', "hauteperformance",date+1.day, date-1.day).sum('cp_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "hauteperformance", date+1.day,date-1.day ).sum('cp_conso').to_i > EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "hauteperformance", date+1.day,date-1.day ).sum('cp_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></span></div>
                
              <div class="table-row-xs table-bottom">TOTAL <span class="pull-right"><%= number_with_delimiter((EtatDepense.where('date <= ? AND date >= ?', date+1.day, date-1.day).sum('cp_conso')/1000).to_i, :delimiter => ' ') %> / <%= number_with_delimiter((EtatDepense.where('date <= ? AND date >= ? ',date+1.day, date-1.day).sum('cp_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('date <= ? AND date >= ?', date+1.day,date-1.day ).sum('cp_conso').to_i > EtatDepense.where('date <= ? AND date >= ?', date+1.day,date-1.day ).sum('cp_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></span></div>
            </td></tr>
           <% end %>
          </tbody>
           
        </table>
      </div > 
      <div class="text-center"><%= link_to etat_depenses_path, class:"bouton" do %>Afficher les détails des dépenses <%end%></div>
      <div class="i24"></div>
    <%end%>
  </div>

  <!-- suivi des ae-->
  <div id="ae">
    <div class="row">
      <div class="col-md-12">
        <div id="bar-solideo-ae"></div>
      </div>
     
    </div>
    <div class="i40"></div>
    
    <div>
      <span class="fs16 fw7 pdt c2 ">Tableau répartition annuelle des dépenses de l'état en K€ (AE consommés / AE prévus)</span>
    </div>
    <div class="i12"></div>
    <% if !@etat_depenses_array.nil? && !@etat_depenses_array.empty? %>

      <div class="ED_table hidden-xs">
        <table class="table-striped">
          <thead>
            <tr>
              <th scope="col">Dates</th>
              <th scope="col"><%= link_to solideo_depenses_path do %>Solideo<%end%></th>
              <th scope="col">Cojo</th>
              <th scope="col">Héritage</th>
              <th scope="col">Autres</th>
              <th scope="col" class="border-none">Total</th>
            </tr>
          </thead>
          <tbody>
            <% @etat_depenses_array.each do |date| %>
            <tr>
              <th scope="row"><%= date.strftime('%Y') %></th>
              <td><div class="table-row"><div class="table-row-left"><%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "solideo", date+1.day,date-1.day ).sum('ae_conso')/1000).to_i, :delimiter => ' ') %> </div> <div class="table-row-right"> / <%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ? ', "solideo",date+1.day, date-1.day).sum('ae_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "solideo", date+1.day,date-1.day ).sum('ae_conso').to_i > EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "solideo", date+1.day,date-1.day ).sum('ae_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></div></div></td>
              <td><div class="table-row"><div class="table-row-left"><%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "cojo", date+1.day,date-1.day ).sum('ae_conso')/1000).to_i, :delimiter => ' ') %> </div> <div class="table-row-right"> / <%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "cojo", date+1.day, date-1.day).sum('ae_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "cojo", date+1.day,date-1.day ).sum('ae_conso').to_i > EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "cojo", date+1.day,date-1.day ).sum('ae_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></div></div></td>
              <td><div class="table-row"><div class="table-row-left"><%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "heritage", date+1.day, date-1.day ).sum('ae_conso')/1000).to_i, :delimiter => ' ') %> </div> <div class="table-row-right"> / <%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ? ', "heritage",date+1.day, date-1.day).sum('ae_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "heritage", date+1.day,date-1.day ).sum('ae_conso').to_i > EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "heritage", date+1.day,date-1.day ).sum('ae_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></div></div> </td>
              <td><div class="table-row"><div class="table-row-left"><%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "hauteperformance",date+1.day, date-1.day).sum('ae_conso')/1000).to_i, :delimiter => ' ') %> </div> <div class="table-row-right"> / <%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ? ', "hauteperformance",date+1.day, date-1.day).sum('ae_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "hauteperformance", date+1.day,date-1.day ).sum('ae_conso').to_i > EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "hauteperformance", date+1.day,date-1.day ).sum('ae_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></div></div></td>
              <td class="border-none"><div class="table-row"><div class="table-row-left"><%= number_with_delimiter((EtatDepense.where('date <= ? AND date >= ?', date+1.day, date-1.day).sum('ae_conso')/1000).to_i, :delimiter => ' ') %> </div> <div class="table-row-right"> / <%= number_with_delimiter((EtatDepense.where('date <= ? AND date >= ? ',date+1.day, date-1.day).sum('ae_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('date <= ? AND date >= ?', date+1.day,date-1.day ).sum('ae_conso').to_i > EtatDepense.where('date <= ? AND date >= ?', date+1.day,date-1.day ).sum('ae_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></div></div></td>
            </tr>
            <% end %>
          </tbody>
        </table>
      </div>
    
      <div class="ED_table visible-xs">
        <table class="table-striped">
          <thead></thead>
           
          <tbody>
           <% @etat_depenses_array.each do |date| %>
            <tr><td>
            
              <div class="table-row-xs"><b><%= date.strftime('%Y') %></b></div>
            
              <div class="table-row-xs">SOLIDEO <span class="pull-right"><%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "solideo", date+1.day,date-1.day ).sum('ae_conso')/1000).to_i, :delimiter => ' ') %>  / <%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ? ', "solideo",date+1.day, date-1.day).sum('ae_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "solideo", date+1.day,date-1.day ).sum('ae_conso').to_i > EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "solideo", date+1.day,date-1.day ).sum('ae_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></span></div>
                
              <div class="table-row-xs">COJO <span class="pull-right"><%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "cojo", date+1.day,date-1.day ).sum('ae_conso')/1000).to_i, :delimiter => ' ') %> / <%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "cojo", date+1.day, date-1.day).sum('ae_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "cojo", date+1.day,date-1.day ).sum('ae_conso').to_i > EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "cojo", date+1.day,date-1.day ).sum('ae_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></span></div>
                
              <div class="table-row-xs">HÉRITAGE <span class="pull-right"><%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "heritage", date+1.day, date-1.day ).sum('ae_conso')/1000).to_i, :delimiter => ' ') %> / <%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ? ', "heritage",date+1.day, date-1.day).sum('ae_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "heritage", date+1.day,date-1.day ).sum('ae_conso').to_i > EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "heritage", date+1.day,date-1.day ).sum('ae_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></span></div> 
                
              <div class="table-row-xs" >HAUTEPERFORMANCE <span class="pull-right"><%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "hauteperformance",date+1.day, date-1.day).sum('ae_conso')/1000).to_i, :delimiter => ' ') %>  / <%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ? ', "hauteperformance",date+1.day, date-1.day).sum('ae_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "hauteperformance", date+1.day,date-1.day ).sum('ae_conso').to_i > EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "hauteperformance", date+1.day,date-1.day ).sum('ae_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></span></div>
                
              <div class="table-row-xs table-bottom">TOTAL <span class="pull-right"><%= number_with_delimiter((EtatDepense.where('date <= ? AND date >= ?', date+1.day, date-1.day).sum('ae_conso')/1000).to_i, :delimiter => ' ') %> / <%= number_with_delimiter((EtatDepense.where('date <= ? AND date >= ? ',date+1.day, date-1.day).sum('ae_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('date <= ? AND date >= ?', date+1.day,date-1.day ).sum('ae_conso').to_i > EtatDepense.where('date <= ? AND date >= ?', date+1.day,date-1.day ).sum('ae_prevu').round%><i class="fas fa-exclamation-circle"></i><% end %></span></div>
            </td></tr>
           <% end %>
          </tbody>
           
        </table>
      </div>
      
      <div class="text-center"><%= link_to etat_depenses_path, class:"bouton" do %>Afficher les détails des dépenses <%end%></div>
      <div class="i24"></div>
    <%end%>
  </div>
</div>

<div class="i24"></div>

<div  class="box_page">
  <div>
    <span class="titre_section">Évolution de la maquette budgétaire de l'état</span>
  </div>
  <div class="i24"></div>

  <div id="container-chart"></div>
</div>

<div class="i24"></div>

<script>
$('#ae').hide();

 $("#cp_button").click(function () {
  $('#ae').hide();
  $('#cp').show();
  $("#cp_button").addClass('bouton');
  $("#cp_button").removeClass('bouton_unselected');
  $("#ae_button").removeClass('bouton');
  $("#ae_button").addClass('bouton_unselected');
 });
  $("#ae_button").click(function () {
  $('#cp').hide();
  $('#ae').show();
  $("#ae_button").addClass('bouton');
  $("#ae_button").removeClass('bouton_unselected');
  $("#cp_button").removeClass('bouton');
  $("#cp_button").addClass('bouton_unselected');
 });
</script>
<!--cp-->
<script>
  Highcharts.chart('bar-solideo', {
    chart: {
        type: 'column',
    height:'300px',
      backgroundColor: '#fff',
          style:{
          fontFamily: "Marianne Regular",
     
          },
    },
    title: {
       text: 'Répartition annuelle des dépenses (CP)',
       verticalAlign: "top",
        style: {
                  color: "#6A6A6A",
                  fontWeight: "400",
  
          fontSize: '12px',
                  },
    },

    xAxis: {
        categories: ['2018', '2019',  "2020","2021", "Prev 2021",],
        crosshair: true
    },
    yAxis: {
        min: 0,
        title: {
            text: 'Budget Consommé (M€)'
        },
      gridLineColor: "#fff",
    },
  legend: {
    enabled: true,
  },
    tooltip: {
        headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
        pointFormat: '<tr><td style="padding:0"><b>{series.name} : </b></td>' +
            '<td style="padding:0"><b> {point.y:.1f} M€</b></td></tr>',
        footerFormat: '</table>',
        shared: true,
        useHTML: true,
       borderColor: 'transparent',
   borderRadius: 16,
   backgroundColor: '#fff',
    },
    plotOptions: {
        column: {
            pointPadding: 0.2,
            borderWidth: 0,
            grouping: false,
          dataLabels: {
                enabled: false,
            }
        }
    },
    series: [
    {
        name: 'Solideo',
        color: '#5770BE',
        data: [{y:<%= (EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2018,1,1), Date.new(2018,12,31),"solideo").sum('cp_conso')/1000000).round %> },
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2019,1,1), Date.new(2019,12,31),"solideo").sum('cp_conso')/1000000).round%> },
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2020,1,1), Date.new(2020,12,31),"solideo").sum('cp_conso')/1000000).round%>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2021,1,1), Date.new(2021,12,31),"solideo").sum('cp_conso')/1000000).round%>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2021,1,1), Date.new(2021,12,31),"solideo").sum('cp_prevu')/1000000).round%>},
          ],
        pointPlacement: 0,
    },{
        name: 'Cojo',
        color:'#76505B',
        data: [{y:<%= (EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2018,1,1), Date.new(2018,12,31),"cojo").sum('cp_conso')/1000000).round %> },
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2019,1,1), Date.new(2019,12,31),"cojo").sum('cp_conso')/1000000).round%> },
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2020,1,1), Date.new(2020,12,31),"cojo").sum('cp_conso')/1000000).round%>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2021,1,1), Date.new(2021,12,31),"cojo").sum('cp_conso')/1000000).round%>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2021,1,1), Date.new(2021,12,31),"cojo").sum('cp_prevu')/1000000).round%>},
          ],
        pointPlacement: 0,
    },{
        name: 'Heritage',
        color:'#D08A77',
        data: [{y:<%= (EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2018,1,1), Date.new(2018,12,31),"heritage").sum('cp_conso')/1000000).round %>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2019,1,1), Date.new(2019,12,31),"heritage").sum('cp_conso')/1000000).round%> },
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2020,1,1), Date.new(2020,12,31),"heritage").sum('cp_conso')/1000000).round%>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2021,1,1), Date.new(2021,12,31),"heritage").sum('cp_conso')/1000000).round%>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2021,1,1), Date.new(2021,12,31),"heritage").sum('cp_prevu')/1000000).round%>},
          ],
        pointPlacement: 0,
    },{
        name: 'Haute Performance',
        color:'#FFE800',
        data: [{y:<%= (EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2018,1,1), Date.new(2018,12,31),"hauteperformance").sum('cp_conso')/1000000).round %>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2019,1,1), Date.new(2019,12,31),"hauteperformance").sum('cp_conso')/1000000).round%> },
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2020,1,1), Date.new(2020,12,31),"hauteperformance").sum('cp_conso')/1000000).round%>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2021,1,1), Date.new(2021,12,31),"hauteperformance").sum('cp_conso')/1000000).round%>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2021,1,1), Date.new(2021,12,31),"hauteperformance").sum('cp_prevu')/1000000).round%>},
          ],
        pointPlacement: 0,
    },]
});
 </script> 

<!-- ae-->
<script>
  Highcharts.chart('bar-solideo-ae', {
    chart: {
        type: 'column',
        height:'300px',
        backgroundColor: '#fff',
          style:{
          fontFamily: "Marianne Regular",     
          },
    },
    title: {
       text: 'Répartition annuel des AE',
       verticalAlign: "top",
        style: {
                  color: "#6A6A6A",
                  fontWeight: "400",
                  fontSize: '12px',
                  },
    },

    xAxis: {
        categories: ['2018', '2019',  "2020","2021", "Prev 2021",],
        crosshair: true
    },
    yAxis: {
        title: {
            text: 'Budget Consommé (M€)'
        },
      gridLineColor: "#fff",
    },
  legend: {
    enabled: true,
  },
    tooltip: {
        headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
        pointFormat: '<tr><td style="padding:0"><b>{series.name} : </b></td>' +
            '<td style="padding:0"><b> {point.y:.1f} M€</b></td></tr>',
        footerFormat: '</table>',
        shared: true,
        useHTML: true,
       borderColor: 'transparent',
   borderRadius: 16,
   backgroundColor: '#fff',
    },
    plotOptions: {
        column: {
            pointPadding: 0.2,
            borderWidth: 0,
            grouping: false,
          dataLabels: {
                enabled: false,
            }
        }
    },
    series: [{
        name: 'Solideo',
        color: '#5770BE',
        data: [{y:<%= (EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2018,1,1), Date.new(2018,12,31),"solideo").sum('ae_conso')/1000000).round %>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2019,1,1), Date.new(2019,12,31),"solideo").sum('ae_conso')/1000000).round%>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2020,1,1), Date.new(2020,12,31),"solideo").sum('ae_conso')/1000000).round%>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2021,1,1), Date.new(2021,12,31),"solideo").sum('ae_conso')/1000000).round%>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2021,1,1), Date.new(2021,12,31),"solideo").sum('ae_prevu')/1000000).round%>},
          ],
        pointPlacement: 0,
    },{
        name: 'Cojo',
        color:'#76505B',
        data: [{y:<%= (EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2018,1,1), Date.new(2018,12,31),"cojo").sum('ae_conso')/1000000).round %>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2019,1,1), Date.new(2019,12,31),"cojo").sum('ae_conso')/1000000).round%>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2020,1,1), Date.new(2020,12,31),"cojo").sum('ae_conso')/1000000).round%>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2021,1,1), Date.new(2021,12,31),"cojo").sum('ae_conso')/1000000).round%>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2021,1,1), Date.new(2021,12,31),"cojo").sum('ae_prevu')/1000000).round%>},
          ],
        pointPlacement: 0,
    },{
        name: 'Heritage',
        color:'#D08A77',
        data: [{y:<%= (EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2018,1,1), Date.new(2018,12,31),"heritage").sum('ae_conso')/1000000).round %> },
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2019,1,1), Date.new(2019,12,31),"heritage").sum('ae_conso')/1000000).round%> },
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2020,1,1), Date.new(2020,12,31),"heritage").sum('ae_conso')/1000000).round%>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2021,1,1), Date.new(2021,12,31),"heritage").sum('ae_conso')/1000000).round%>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2021,1,1), Date.new(2021,12,31),"heritage").sum('ae_prevu')/1000000).round%>},
          ],
        pointPlacement: 0,
    },{
        name: 'Haute Performance',
        color:'#FFE800',
        data: [{y:<%= (EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2018,1,1), Date.new(2018,12,31),"hauteperformance").sum('ae_conso')/1000000).round %>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2019,1,1), Date.new(2019,12,31),"hauteperformance").sum('ae_conso')/1000000).round%> },
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2020,1,1), Date.new(2020,12,31),"hauteperformance").sum('ae_conso')/1000000).round%>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2021,1,1), Date.new(2021,12,31),"hauteperformance").sum('ae_conso')/1000000).round%>},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ? AND beneficiaire = ?', Date.new(2021,1,1), Date.new(2021,12,31),"hauteperformance").sum('ae_prevu')/1000000).round%>},
         ],
        pointPlacement: 0,
    },]
});
 </script> 



<script>
Highcharts.chart('container-chart', {
    chart: {
        type: 'waterfall',
    
        style:{
          fontFamily: "Marianne Regular",
          },
    },

    title: {
        text: null,
        style: {
                  color: "#6A6A6A",
                  fontWeight: "400",
          fontStyle: 'italic',
      fontSize: '16px',
                  },
    },

    xAxis: {
        type: 'category',
      labels: {
                formatter: function () {
                  if (this.value == "ΔSolideo"){
                    return '<a href="/solideo_depenses" style="color:#000091">' + this.value + '</a>'
                  } else {
                    return this.value 
                  }
                },
                useHTML: true,
            },
    },

    yAxis: {
      gridLineColor: '#E6F0FF', 
        title: {
            text: 'Montant k€'
        }
    },

    legend: {
        enabled: false
    },

    tooltip: {
        pointFormat: '<b>{point.y:,.0f}</b> k€',
      borderColor: 'transparent',
   borderRadius: 16,
   backgroundColor: '#fff',
    },

    series: [{
      borderColor: '#fff',
      data: [{
            name: 'Prévisionnel 2018',
            y: <%= (EtatBudget.first.budget_total/1000).round%>,
            color: "#bfbfbf",
        }, {
            name: 'ΔSolideo',
            y: <%= ((EtatBudget.last.budget_solideo-EtatBudget.first.budget_solideo)/1000).round%>,
            color: "#C68D7B",
           
        }, {
            name: 'ΔCOJO',
            y: <%= ((EtatBudget.last.budget_cojo-EtatBudget.first.budget_cojo)/1000).round%>,
            color: "#C68D7B",
        }, {
            name: 'Δhéritage',
            y: <%= ((EtatBudget.last.budget_heritage-EtatBudget.first.budget_heritage)/1000).round%>,
            color: "#C68D7B",
        },{
            name: 'ΔAutres',
            y: <%= ((EtatBudget.last.budget_hauteperformance-EtatBudget.first.budget_hauteperformance)/1000).round%>,
            color: "#C68D7B",
        },  {
            name: 'Prévisionnel 2020',
            isSum: true,
            color: "#2E5D63"
        }],
        dataLabels: {
            enabled: true,
            formatter: function () {
                return Highcharts.numberFormat(this.y / 1000, 0, ',') + 'k';
            },
          
            style: {
                fontWeight: 'bold',
                color: '#000',
            
              fontFamily: 'Karla',
            }
        },
        pointPadding: 0
    }]
});
</script>