<div  class="table-box">
  <div class="SD-topo-box-title">
    <span>Évolution de la maquette budgétaire de l'état</span>
  </div><br><br>

    <div id="container-chart">
      
    </div><br>
</div><br><br>
<div  class="table-box">
  <div class="SD-topo-box-title">
    <span>Répartition annuelle des dépenses de l'état en K€ (CP consommés / CP prévus)</span>
  </div><br><br>
<% if !@etat_depenses_array.nil? && !@etat_depenses_array.empty? %>

    <div class="ED_table">
      <table>
        <thead>
          <tr>
            <th scope="col">Dates</th>
            <th scope="col"><%= link_to solideo_depenses_path do %>Solideo<%end%></th>
            <th scope="col">Cojo</th>
            <th scope="col">Héritage</th>
            <th scope="col">Haute Performance</th>
            <th scope="col" class="border-none">Total</th>
          </tr>
        </thead>
        <tbody>
          <% @etat_depenses_array.each do |date| %>
          <tr>
            <th scope="row"><%= date.strftime('%Y') %></th>
            <td><div class="table-row"><div class="table-row-left"><%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "solideo", date+1.day,date-1.day ).sum('cp_conso')/1000).to_i, :delimiter => ' ') %> </div> <div class="table-row-right"> / <%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ? ', "solideo",date+1.day, date-1.day).sum('cp_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "solideo", date+1.day,date-1.day ).sum('cp_conso').to_i > EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "solideo", date+1.day,date-1.day ).sum('cp_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></div></div></td>
            <td><div class="table-row"><div class="table-row-left"><%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "cojo", date+1.day,date-1.day ).sum('cp_conso')/1000).to_i, :delimiter => ' ') %> </div> <div class="table-row-right"> / <%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "cojo", date+1.day, date-1.day).sum('cp_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "cojo", date+1.day,date-1.day ).sum('cp_conso').to_i > EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "cojo", date+1.day,date-1.day ).sum('cp_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></div></div></td>
            <td><div class="table-row"><div class="table-row-left"><%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "heritage", date+1.day, date-1.day ).sum('cp_conso')/1000).to_i, :delimiter => ' ') %> </div> <div class="table-row-right"> / <%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ? ', "heritage",date+1.day, date-1.day).sum('cp_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "heritage", date+1.day,date-1.day ).sum('cp_conso').to_i > EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "heritage", date+1.day,date-1.day ).sum('cp_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></div></div> </td>
            <td><div class="table-row"><div class="table-row-left"><%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "hauteperformance",date+1.day, date-1.day).sum('cp_conso')/1000).to_i, :delimiter => ' ') %> </div> <div class="table-row-right"> / <%= number_with_delimiter((EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ? ', "hauteperformance",date+1.day, date-1.day).sum('cp_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "hauteperformance", date+1.day,date-1.day ).sum('cp_conso').to_i > EtatDepense.where('beneficiaire = ? AND date <= ? AND date >= ?', "hauteperformance", date+1.day,date-1.day ).sum('cp_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></div></div></td>
            <td class="border-none"><div class="table-row"><div class="table-row-left"><%= number_with_delimiter((EtatDepense.where('date <= ? AND date >= ?', date+1.day, date-1.day).sum('cp_conso')/1000).to_i, :delimiter => ' ') %> </div> <div class="table-row-right"> / <%= number_with_delimiter((EtatDepense.where('date <= ? AND date >= ? ',date+1.day, date-1.day).sum('cp_prevu')/1000).to_i, :delimiter => ' ') %> <% if EtatDepense.where('date <= ? AND date >= ?', date+1.day,date-1.day ).sum('cp_conso').to_i > EtatDepense.where('date <= ? AND date >= ?', date+1.day,date-1.day ).sum('cp_prevu').to_i%><i class="fas fa-exclamation-circle"></i><% end %></div></div></td>
          </tr>
          <% end %>
        </tbody>
      </table>
    </div>
  
   
  
     <div class="EB-details">
    <%= link_to "détails des dépenses" , etat_depenses_path %>
  </div>
  <% else %>
    <div>
      Aucune dépense renseignée
    </div>
  <%end%>
  
   
 
  
 
    
</div>


<script>
Highcharts.chart('container-chart', {
    chart: {
        type: 'waterfall',
      spacing: [40,40,40,40],
        style:{
          fontFamily: "Spectral",
          },
    },

    title: {
        text: "Evolution de la maquette budgétaire de l'Etat ",
      margin:40,
        style: {
                  color: "#8F8F8F",
                  fontWeight: "400",
          fontStyle: 'italic',
      fontSize: '16px',
                  },
    },

    xAxis: {
        type: 'category'
    },

    yAxis: {
      gridLineColor: '#E6F0FF', 
        title: {
            text: 'Montant €'
        }
    },

    legend: {
        enabled: false
    },

    tooltip: {
        pointFormat: '<b>${point.y:,.2f}</b> €'
    },

    series: [{
      borderColor: '#fff',
      data: [{
            name: 'Prévisionnel 2018',
            y: <%= EtatBudget.first.budget_total.to_i%>,
            color: "#8F8F8F",
        }, {
            name: 'Variation Solideo',
            y: <%= (EtatBudget.last.budget_solideo-EtatBudget.first.budget_solideo).to_i%>,
            color: "#F1013B",
        }, {
            name: 'Variation COJO',
            y: <%= (EtatBudget.last.budget_cojo-EtatBudget.first.budget_cojo).to_i%>,
            color: "#F1013B",
        }, {
            name: 'Variation héritage',
            y: <%= (EtatBudget.last.budget_heritage-EtatBudget.first.budget_heritage).to_i%>,
            color: "#F1013B",
        },{
            name: 'Variation Haute Performance',
            y: <%= (EtatBudget.last.budget_hauteperformance-EtatBudget.first.budget_hauteperformance).to_i%>,
            color: "#F1013B",
        },  {
            name: 'Prévisionnel 2020',
            isSum: true,
            color: Highcharts.getOptions().colors[1]
        }],
        dataLabels: {
            enabled: true,
            formatter: function () {
                return Highcharts.numberFormat(this.y / 1000, 0, ',') + 'k';
            },
          
            style: {
                fontWeight: 'bold',
                color: '#000',
            
              fontFamily: 'Karla',
            }
        },
        pointPadding: 0
    }]
});
</script>