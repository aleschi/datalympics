<div class="mxw1 pd32 ma">
 <div class="i24"></div>
  <div class="c2 fw6 fs40 tc">Suivi du budget de l'Etat pour les JOP2024</div>
  <div class="i40"></div>
  <%= render 'topo'%>
  <%= render 'table'%>

<div  class="pd32 br20 bs bckc1">
  <div>
    <span class="fs16 fw7 pdt c0 bckc2 tupp">Suivi execution budgétaire 2020 (Programme 350)</span>
  </div>

  <div class="i24"></div>
   <div id="container-chorus"></div>
   <div class="i24"></div>

    <div class="ED_table">
    <table class="table-striped">
      <thead>
        <tr>
          <th scope="col">Date</th>
          <th scope="col">Compte budgetaire</th>
          <th scope="col">Action</th>
          <th scope="col">Consommation (€)</th>

        </tr>
      </thead>

      <tbody>
   
        
         <!-- total annuel -->
            <tr class="total-annuel">
                <td><%= l(Date.new(2020,1,1), format: "%Y") %></td>
                <td></td>
                <td></td>
                <td><%= number_with_delimiter(@conso.sum('montant'), :delimiter => ' ') %></td>
            </tr>
        
        <% @conso.each do |choru| %>
          <tr>
            <td><%= l(choru.date, format: "%e %b %Y") %></td>
            <td><%= choru.compte_budgetaire %></td>
             <td><%= choru.domaine_fonctionnel %></td>
            <td><%= number_with_delimiter(choru.montant, :delimiter => ' ') %></td>

          </tr>
        <% end %>
        
       
      </tbody>
    </table>
  </div>
</div>
<div class="i24"></div>
</div>

<script>

  $('.menu-budget-global').addClass('menu-active'); 
</script>
  
<script>
  
Highcharts.stockChart('container-chorus', {
 // mapNavigation: {
 //           enableMouseWheelZoom: true
 //       },
   chart:{
        backgroundColor: '#fff',
        borderColor: '#fff',
        type: 'scatter',
        height: '600px',
        style:{
          fontFamily: "Marianne Regular",
          },
        zoomType: 'x',
          },
  		navigator: {
        maskFill: 'rgba(248,248,248,0.3)',
    	},
  		rangeSelector: {
            buttons: [ {
                type: 'month',
                count: 1,
                text: '1m'
            }, {
                type: 'month',
                count: 3,
                text: '3m'
            },{
                type: 'month',
                count: 6,
                text: '6m'
            }, {
                type: 'year',
                count: 1,
                text: '1an'
            }, {
                type: 'all',
                text: 'Tout'
            }],
            selected: 3,
            buttonTheme: { // styles for the buttons
            fill: '#F8F8F8',
            stroke: 'none',
            'stroke-width': 0,
            r: 4,
            style: {
                color: '#000',
                fontWeight: 'bold'
            },
            states: {
                hover: {
                },
                select: {
                    fill: '#000091',
                    style: {
                        color: 'white'
                    }
                }
                // disabled: { ... }
            }
        },
        inputStyle: {
                color: '#000',            
            },
        labelStyle: {
            color: '#000', 
        	},
        },
	    legend: {
	     enabled: true,
	     verticalAlign: 'top',
	    },
	    title: {
	            text:"",
	    },
	    yAxis: {
	      gridLineColor: '#fff', 
	        title: {
	            text: 'Total k€'
	        }
	    },
		scrollbar: {
		    barBackgroundColor: '#CECECE',
		    barBorderColor: "#F8F8F8",
		    barBorderRadius: 6,
		    buttonBackgroundColor: "#F8F8F8",
		    buttonArrowColor:'#CECECE',
		    buttonBackgroundColor:"#F8F8F8",
		    buttonBorderColor:"#F8F8F8",
		    buttonBorderRadius: 6,
		    rifleColor:"#F8F8F8",
		},
	    tooltip: {
	    	borderColor: 'transparent',
	   		borderRadius: 16,
	   		backgroundColor: '#fff',
	    },
		xAxis:{
		    type: 'datetime',
		},
		yAxis: {
		    plotLines: [{
		      color: '#FF6F4C',
		      label: {
		        text: "LFI",
		        textAlign: 'left',
		        verticalAlign: 'middle',
		        x: -30,
		        style: {
		          color:'#FF6F4C',
		        },
		      },
		      zIndex: 1,
		      width: 2,
		      value: <%= @programme.where('type_budget = ? OR type_budget = ?',  "Bud. voté ou en cours de vote","Loi de Finances Initiale").first.montant.to_f/1000 %>,
		    }],
		    title: {
		      text: "Total en k€",
		    },
		},
	    plotOptions: {
	        series: {
	          lineWidth: 2,
	            label: {
	                connectorAllowed: false
	            }, 
	            marker: {
	                enabled: true,
	                radius:2,
	            },
	          step: 'left',
	        }
	    },
 
  
    series: [

       {
        	name: 'Crédits ouverts',
        	color: '#2E5D63',
        	tooltip: {
           pointFormatter: function() {
		      var point = this,
		          series = point.series,
		        firstDate = Highcharts.dateFormat('%e %b %Y', point.x),
		        number = Highcharts.numberFormat(point.y, -1, ',',' '),
		        header = '<span style="font-size: 12px">' + firstDate   + '</span><br/>',
		         
		        content =  point.name + '<br/>'+ '<b>Crédits ouverts : '+ number + ' k€</b><br/>';

		      return header + content;
	    	},
	        },
	        data: [
	        
	          <% @montant = 0 %>
	         
	          <% @programme.where(' type_piece != ?', 'MADI').each do |programme| %>
	            <% if programme.type_budget == "Bud. voté ou en cours de vote" || programme.type_budget == "Loi de Finances Initiale" %>
	            <% @montant =  programme.montant %>
	            {name:  '<%= programme.type_budget.to_s %> : <%= number_with_delimiter((programme.montant.to_f/1000).round, :delimiter => ' ').to_s %> k€', x: Date.UTC(<%=programme.date.year%>,<%= programme.date.month-1%>, <%=programme.date.day%>), y: <%= (programme.montant.to_f/1000).round%>,}, 
	            <% elsif programme.type_piece == "RB" %>
	            {name:  '<%= programme.type_budget.to_s%> : <%= number_with_delimiter((programme.montant.to_f/1000).round, :delimiter => ' ').to_s %> k€', x: Date.UTC(<%=programme.date.year%>,<%= programme.date.month-1%>, <%=programme.date.day%>),y: <%=  ((@montant - programme.montant).to_f/1000).round%>,  },
	          <% @montant = @montant - programme.montant %>
	            <% else %>              
	            {name:  '<%= programme.type_budget.to_s%> : <%= number_with_delimiter((programme.montant.to_f/1000).round, :delimiter => ' ').to_s %> k€', x: Date.UTC(<%=programme.date.year%>,<%= programme.date.month-1%>, <%=programme.date.day%>),y: <%=  ((@montant + programme.montant).to_f/1000).round%>,  },
	            <% @montant = @montant + programme.montant %>
	            <% end %> 
	          <% end %>
	   
	        ],
	        fillColor: {
	                linearGradient: {
	                    x1: 0,
	                    y1: 0,
	                    x2: 0,
	                    y2: 1
	                },
	                stops: [
	                    [0, "#2E5D63"],
	                    [1, Highcharts.color("#2E5D63").setOpacity(0).get('rgba')]
	                ]
	            },
     
    	}, 
    
    {
        name: 'Programme',
        color: '#20E37B',
         tooltip: {
	           pointFormatter: function() {
	      var point = this,
	        series = point.series,
	        firstDate = Highcharts.dateFormat('%e %b %Y', point.x),
	        number = Highcharts.numberFormat(point.y, -1, ',',' '),
	        header = '<span style="font-size: 12px">' + firstDate  + '</span><br/>',
	         
	        content =  point.name + '<br/>'+'<b>Disponible : '+ number + ' k€</b><br/>';

	      return header + content;
	    },
        },
        data: [
       
          <% @montant = 0 %>
       
          <% @programme.each do |programme| %>
            <% if programme.type_budget == "Bud. voté ou en cours de vote" || programme.type_budget == "Loi de Finances Initiale" %>
            <% @montant =  programme.montant %>
            {name:  '<%= programme.type_budget.to_s %> : <%= number_with_delimiter((programme.montant.to_f/1000).round, :delimiter => ' ').to_s %> k€', x: Date.UTC(<%=programme.date.year%>,<%= programme.date.month-1%>, <%=programme.date.day%>), y: <%= (programme.montant.to_f/1000).round%>,}, 
            <% else %>              
            {name:  '<%= programme.type_budget.to_s%> : <%= number_with_delimiter((programme.montant.to_f/1000).round, :delimiter => ' ').to_s %> k€', x: Date.UTC(<%=programme.date.year%>,<%= programme.date.month-1%>, <%=programme.date.day%>),y: <%=  ((@montant + programme.montant).to_f/1000).round%>,  },
            <% @montant = @montant + programme.montant %>
            <% end %> 
   
          <% end %>
        ],
               
    
    },
    {
        name: 'BOP 350-CDSP',
        color: '#5770BE',
         tooltip: {
           pointFormatter: function() {
		      var point = this,
		        series = point.series,
		        firstDate = Highcharts.dateFormat('%e %b %Y', point.x),
		        number = Highcharts.numberFormat(point.y, -1, ',',' '),
		        header = '<span style="font-size: 12px">' + firstDate  + '</span><br/>',
		         
		        content =  point.name + '<br/>'+'<b>Disponible : '+ number + ' k€</b><br/>';

		      return header + content;
		    },
        },
        data: [
       
          <% @montant = 0 %>  
          <% @bop.each do |programme| %>                     
            {name:  '<%= programme.type_budget.to_s%> : <%= number_with_delimiter((programme.montant.to_f/1000).round, :delimiter => ' ').to_s %> k€', x: Date.UTC(<%=programme.date.year%>,<%= programme.date.month-1%>, <%=programme.date.day%>),y: <%=  ((@montant + programme.montant).to_f/1000).round%>,  },
            <% @montant = @montant + programme.montant %> 
          <% end %>
        ],
    },
    {
        name: 'UO 350-CDSP-CDSP',
        color: '#169B62',
         tooltip: {
           pointFormatter: function() {
		      var point = this,
		        series = point.series,
		        firstDate = Highcharts.dateFormat('%e %b %Y', point.x),
		        number = Highcharts.numberFormat(point.y, -1, ',',' '),
		        header = '<span style="font-size: 12px">' + firstDate  + '</span><br/>',
		         
		        content =  point.name + '<br/>'+'<b>Disponible : '+ number + ' k€</b><br/>';

		      return header + content;
		    },
      	},
        data: [
       
          <% @montant = 0 %>  
          <% @uo.each do |programme| %> 
          	<% if @conso.count > 0 %>  
          	<% @conso.each do |conso| %>
            <% if conso.date < programme.date %> 
            {name:  'Consommation : <%= number_with_delimiter((conso.montant.to_f/1000).round, :delimiter => ' ').to_s %> k€', x: Date.UTC(<%=conso.date.year%>,<%= conso.date.month-1%>, <%=conso.date.day%>),y: <%=  ((@montant - conso.montant).to_f/1000).round%>,  },   
            
            <% @montant = @montant - conso.montant %>
            <% end %>
            <% end %> 
            <% end %>                  
            {name:  '<%= programme.type_budget.to_s%> : <%= number_with_delimiter((programme.montant.to_f/1000).round, :delimiter => ' ').to_s %> k€', x: Date.UTC(<%=programme.date.year%>,<%= programme.date.month-1%>, <%=programme.date.day%>),y: <%=  ((@montant + programme.montant).to_f/1000).round%>,  },
            <% @montant = @montant + programme.montant %> 
          <% end %>
        ],
    },
     
      
     
            ],

    responsive: {
        rules: [{
            condition: {
                maxWidth: 500
            },
            chartOptions: {
                legend: {
                    layout: 'horizontal',
                    align: 'center',
                    verticalAlign: 'bottom'
                }
            }
        }]
    }

});
</script>




