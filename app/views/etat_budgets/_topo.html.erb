

<% if !@etat_budget_actuel.nil? %>
<div class="pd32 br20 bs bckc1">
  <div><span class="fs16 fw7 pdt c0 bckc2 tupp">Le Budget de l'état  en chiffres</span></div>
  <div class="i24"></div>
  
    <div class="row">
    <div class="col-md-4 col-sm-5 col-xs-12">
      <div id="depenses_totales" style="height:150px;overflow:hidden;"></div>
      <div class="box_i1">
            <div class="box_i1_t1">+<%= number_with_delimiter((EtatBudget.last.budget_total/1000000-EtatBudget.first.budget_total/1000000).round(1), :delimiter => ' ') %> M€</div>
            <div class="box_i1_t2">Augmentation Budget Total</div>
      </div>
      <div class="i32"></div>
      <div id="depenses_2021" style="height:150px;overflow:hidden;"></div>
      <div class="box_i1">
            <div class="box_i1_t1"><%= number_with_delimiter(((EtatDepense.sum('ae_conso')-EtatDepense.sum('cp_conso'))/1000000).round, :delimiter => ' ') %> M€</div>
            <div class="box_i1_t2">Reste à payer (AE-CP)</div>
      </div>


    </div>

      <div class="col-md-8 col-sm-7 col-xs-12">
        <div id="container-bar1"></div>
        <div class="i60"></div>
        <div id="container-bar-all"></div> 
      </div>
  </div>

</div>
<div class="i24"></div>
<% end %>

<script>
  $('.infos-details').hide();
  $('.info').mouseover(function() {
    $('.infos-details').show();
    })
  $('.info').mouseout(function() {
    $('.infos-details').hide();
    })

</script>

<script>
    
    Highcharts.chart('depenses_totales', {
    chart: {
        type: 'solidgauge',
        height: '200px',
          spacingTop: 0,
          style:{
            fontFamily: "Marianne Regular",
          },
    },
    title: {
        text: 'Execution budgétaire depuis le début',
        verticalAlign: "top",
        style: {
                color: "#8F8F8F",
                fontWeight: "400",        
              fontSize: '12px',
                  },
       
    },
    pane: {
        //center: ['50%', '50%'],
        size: '100%',
        startAngle: -90,
        endAngle: 90,
        background: {
            backgroundColor:'#C4C4C4',
            innerRadius: '80%',
            outerRadius: '100%',
            shape: 'arc'
        }
    },

    exporting: {
        enabled: false
    },

    tooltip: {
        enabled: false
    },

    // the value axis
    yAxis: {
        stops: [
            [0.1, '#20E37B'], // green
            [0.5, '#20E37B'], // yellow
            [0.9, '#F1013B'] // red
        ],
        lineWidth: 0,
        tickWidth: 0,
        minorTickInterval: null,
        tickAmount: 2,
        tickPositions: [<%= (EtatDepense.where('date <= ?', Date.today).sum('cp_conso')/1000000).round %>, <%= (EtatBudget.last.budget_total/1000000)%>],
        min: <%= (EtatDepense.where('date <= ?', Date.today).sum('cp_conso')/1000000).round %>,
        max: <%= (EtatBudget.last.budget_total/1000000)%>,
        title: {
          text: null,
            y: 100,
        },
        labels: {
            y: 16,
            format: '{value:.0f}M€',
        }
    },

    plotOptions: {
        solidgauge: {
            dataLabels: {
                y: 5,
                borderWidth: 0,
                useHTML: true
            }
        }
    },

    credits: {
        enabled: false
    },
    series: [{
        name: 'Paiements versés',
        data: [<%= (EtatDepense.where('date <= ?', Date.today).sum('cp_conso')/1000000).round + (EtatDepense.where('date <= ?', Date.today).sum('cp_conso')/EtatBudget.last.budget_total)*(EtatBudget.last.budget_total-EtatDepense.where('date <= ?', Date.today).sum('cp_conso'))/1000000%>],
        innerRadius: '80%',
      
        dataLabels: {
          enabled: true,
          y:-40,
            format:
                '<div style="text-align:center;color:#000;">' +
                '<span style="font-size:20px">'+<%=((EtatDepense.where('date <= ?', Date.today).sum('cp_conso')/EtatBudget.last.budget_total)*100).round %>+'%</span><br/>' +
                '</div>'
        },
        tooltip: {
            valueSuffix: ' %'
        }
    }],
    
});
</script>
<script>
    
    Highcharts.chart('depenses_2021', {
    chart: {
        type: 'solidgauge',
        height: '200px',
          spacingTop: 0,
          style:{
            fontFamily: "Marianne Regular",
          },
    },
    title: {
        text: 'Execution budgétaire 2021',
        verticalAlign: "top",
        style: {
                color: "#8F8F8F",
                fontWeight: "400",        
              fontSize: '12px',
                  },
       
    },
    pane: {
        //center: ['50%', '50%'],
        size: '100%',
        startAngle: -90,
        endAngle: 90,
        background: {
            backgroundColor:'#C4C4C4',
            innerRadius: '80%',
            outerRadius: '100%',
            shape: 'arc'
        }
    },

    exporting: {
        enabled: false
    },

    tooltip: {
        enabled: false
    },

    // the value axis
    yAxis: {
        stops: [
            [0.1, '#20E37B'], // green
            [0.5, '#20E37B'], // yellow
            [0.9, '#F1013B'] // red
        ],
        lineWidth: 0,
        tickWidth: 0,
        minorTickInterval: null,
        tickAmount: 2,
        tickPositions: [<%= (EtatDepense.where('date >= ?', Date.new(2021,1,1)).sum('cp_conso')/1000000).round%>, <%= (EtatDepense.where('date >= ?', Date.new(2021,1,1)).sum('cp_prevu')/1000000).round%>],
        min: <%= (EtatDepense.where('date >= ?', Date.new(2021,1,1)).sum('cp_conso')/1000000).round%>,
        max: <%= (EtatDepense.where('date >= ?', Date.new(2021,1,1)).sum('cp_prevu')/1000000).round%>,
        title: {
          text: null,
            y: 100,
        },
        labels: {
            y: 16,
            format: '{value:.0f}M€',
        }
    },

    plotOptions: {
        solidgauge: {
            dataLabels: {
                y: 5,
                borderWidth: 0,
                useHTML: true
            }
        }
    },

    credits: {
        enabled: false
    },
    series: [{
        name: 'Paiements versés',
        data: [<%= (EtatDepense.where('date >= ?', Date.new(2021,1,1)).sum('cp_conso')/1000000).round + (EtatDepense.where('date >= ?', Date.new(2021,1,1)).sum('cp_conso')/EtatDepense.where('date >= ?', Date.new(2021,1,1)).sum('cp_prevu'))*(EtatDepense.where('date >= ?', Date.new(2021,1,1)).sum('cp_prevu')-EtatDepense.where('date >= ?', Date.new(2021,1,1)).sum('cp_conso'))/1000000%>],
        innerRadius: '80%',
      
        dataLabels: {
          enabled: true,
          y:-40,
            format:
                '<div style="text-align:center;color:#000;">' +
                '<span style="font-size:20px">'+<%=((EtatDepense.where('date >= ?', Date.new(2021,1,1)).sum('cp_conso')/EtatDepense.where('date >= ?', Date.new(2021,1,1)).sum('cp_prevu'))*100).round %>+'%</span><br/>' +
                '</div>'
        },
        tooltip: {
            valueSuffix: ' %'
        }
    }],
    
});
</script>
<script>

  Highcharts.chart('container-bar-all', {
    chart: {
        type: 'column',
    height:'200px',
    marginTop:20,
      backgroundColor: '#fff',
          style:{
          fontFamily: "Marianne Regular",
     
          },
    },
    title: {
        text: 'Répartition et suivi du budget par action',
        verticalAlign: "top",
        style: {
                  color: "#8F8F8F",
                  fontWeight: "400",
         
          fontSize: '12px',
                  },
    },

    xAxis: {
        categories: ['Solideo', 'Cojo',  "Héritage", "Autres" ],
        crosshair: true
    },
    yAxis: {
        min: 0,
        title: {
            text: 'Budget (M€)'
        },
      gridLineColor: "#fff",
    },
  legend: {
    enabled: false,
  },
    tooltip: {
        headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
        pointFormat: '<tr><td style="padding:0"><b>{series.name} : </b></td>' +
            '<td style="padding:0"><b> {point.y:.1f} M€</b></td></tr>',
        footerFormat: '</table>',
        shared: true,
        useHTML: true,
       borderColor: 'transparent',
   borderRadius: 16,
   backgroundColor: '#fff',
    },
    plotOptions: {
        column: {
            pointPadding: 0.2,
            borderWidth: 0,
            grouping: false,
          dataLabels: {
                enabled: true
            }
        }
    },
    series: [{
        name: 'Budget Total prévu',
        data: [
        {y:<%=(@etat_budget_actuel.budget_solideo/1000000).round%>, color:"#bfbfbf",dataLabels: {
                    enabled: true,
                    formatter: function() {

                      var point = this;                      
                      ecart = <%= ((@etat_budget_actuel.budget_solideo-EtatBudget.order('date DESC').last.budget_solideo)/1000000).round %>;
                      
                      number = Highcharts.numberFormat(point.y, -1, ',',' ');
                      
                       if (ecart >= 0){
                          header = '<span style="font-size: 10px;color:#20E37B"> +' + ecart  + '</span><br/>';
                        }else{
                          header = '<span style="font-size: 10px;color:#E1000F">' + ecart  + '</span><br/>';
                        }
                        
                        content = '<b>' + number  + ' </b>';

                      return header + content;
                    },
                }, },
        {y:<%=(@etat_budget_actuel.budget_cojo/1000000).round%>, color:"#bfbfbf",dataLabels: {
                    enabled: true,
                    formatter: function() {

                      var point = this;                      
                      ecart = <%= ((@etat_budget_actuel.budget_cojo-EtatBudget.order('date DESC').last.budget_cojo)/1000000).round %>;
                      
                      number = Highcharts.numberFormat(point.y, -1, ',',' ');
                      
                       if (ecart >= 0){
                          header = '<span style="font-size: 10px;color:#20E37B"> +' + ecart  + '</span><br/>';
                        }else{
                          header = '<span style="font-size: 10px;color:#E1000F">' + ecart  + '</span><br/>';
                        }
                        
                        content = '<b>' + number  + ' </b>';

                      return header + content;
                    },
                }, },
        {y:<%= (@etat_budget_actuel.budget_heritage/1000000).round%>, color: "#bfbfbf",dataLabels: {
                    enabled: true,
                    formatter: function() {

                      var point = this;                      
                      ecart = <%= ((@etat_budget_actuel.budget_heritage-EtatBudget.order('date DESC').last.budget_heritage)/1000000).round %>;
                      
                      number = Highcharts.numberFormat(point.y, -1, ',',' ');
                      
                       if (ecart >= 0){
                          header = '<span style="font-size: 10px;color:#20E37B"> +' + ecart  + '</span><br/>';
                        }else{
                          header = '<span style="font-size: 10px;color:#E1000F">' + ecart  + '</span><br/>';
                        }
                        
                        content = '<b>' + number  + ' </b>';

                      return header + content;
                    },
                },},
        {y:<%=(@etat_budget_actuel.budget_hauteperformance/1000000).round%>, color: "#bfbfbf",dataLabels: {
                    enabled: true,
                    formatter: function() {

                      var point = this;                      
                      ecart = <%= ((@etat_budget_actuel.budget_hauteperformance-EtatBudget.order('date DESC').last.budget_hauteperformance)/1000000).round %>;
                      
                      number = Highcharts.numberFormat(point.y, -1, ',',' ');
                      
                       if (ecart >= 0){
                          header = '<span style="font-size: 10px;color:#20E37B"> +' + ecart  + '</span><br/>';
                        }else{
                          header = '<span style="font-size: 10px;color:#E1000F">' + ecart  + '</span><br/>';
                        }
                        
                        content = '<b>' + number  + ' </b>';

                      return header + content;
                    },
                },}],
        pointPlacement: 0,
    },{
        name: 'Payés',
        data: [{y:<%= (EtatDepense.where('beneficiaire = ?', "solideo",).sum('cp_conso')/1000000).round%> , color:"#5770BE" },{y:<%= (EtatDepense.where('beneficiaire = ?', "cojo",).sum('cp_conso')/1000000).round%> , color:"#76505B" },{y:<%= (EtatDepense.where('beneficiaire = ?', "hauteperformance",).sum('cp_conso')/1000000).round%> , color: "#FFE800"},{y:<%= (EtatDepense.where('beneficiaire = ?', "heritage",).sum('cp_conso')/1000000).round%> , color: "#D08A77"}],
        pointPlacement: 0,

    }]
});
</script>

<script>
  Highcharts.chart('container-bar1', {
    chart: {
        type: 'waterfall',
        height:'200px',
          backgroundColor: '#fff',
          style:{
          fontFamily: "Marianne Regular",
     
          },
    },
    title: {
       text: 'Suivi annuel des dépenses',
       verticalAlign: "top",
        style: {
                  color: "#8F8F8F",
                  fontWeight: "400",
          fontSize: '12px',
                  },
    },

    xAxis: {
        type: 'category',

    },
    yAxis: {
        min: 0,
        title: {
            text: 'Budget Consommé (M€)'
        },
      gridLineColor: "#fff",
    },
  legend: {
    enabled: false,
  },
    tooltip: {
   
        headerFormat: '<span style="font-size:10px">{point.key}</span><br/>',
        pointFormat: '<b>Dépenses annuelles : {point.y:.1f} M€</b><br/>',

        shared: true,
       useHTML: true,
       borderColor: 'transparent',
   borderRadius: 16,
   backgroundColor: '#fff',
    },
    plotOptions: {
      waterfall: {
            pointWidth: 25,
        },
        column: {

            pointPadding: 0.2,
            borderWidth: 0,
            grouping: false,
            pointWidth: 30,
            dataLabels: {
                enabled: true
            }
        }
    },
    series: [{
        borderColor: '#fff',
        data: [{
              name: '2018',
              y: <%= (EtatDepense.where('date >= ? AND date <= ?', Date.new(2018,1,1), Date.new(2018,12,31)).sum('cp_conso')/1000000).round %>,
              color: "#2E5D63",
          }, {
              name: '2019',
              y: <%=(EtatDepense.where('date >= ? AND date <= ?', Date.new(2019,1,1), Date.new(2019,12,31)).sum('cp_conso')/1000000).round%>,
              color: "#2E5D63",
          },{
              name: '2020',
              y: <%=(EtatDepense.where('date >= ? AND date <= ?', Date.new(2020,1,1), Date.new(2020,12,31)).sum('cp_conso')/1000000).round%>,
              color: "#2E5D63",
          },{
              name: '2021',
              y: <%=(EtatDepense.where('date >= ? AND date <= ?', Date.new(2021,1,1), Date.new(2021,12,31)).sum('cp_conso')/1000000).round%>,
              color: "#2E5D63",
          }, {
              name: 'Cumul',
              isSum: true,
              color: "#2E5D63"
          }],
          dataLabels: {
              enabled: true,
              inside: false,
                    crop:false,
                    overflow:'allow',
              formatter: function () {
                  return Highcharts.numberFormat(this.y, 0, ',') + 'M€';
              },
            
              style: {
                  fontWeight: 'bold',
                  color: '#000',
              
                fontFamily: 'Karla',
              }
          },
          pointPadding: 0
      }],
    
});
 </script> 