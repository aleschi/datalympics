

<% if !@etat_budget_actuel.nil? %>
<div class="pd32 br20 bs bckc1">
  <div><span class="fs16 fw7 pdt c0 bckc2 tupp">Le Budget de l'état  en chiffres</span></div>
  <div class="i24"></div>
  
    <div class="row">
    <div class="col-md-4 col-sm-5 col-xs-12">

      <div class="inline-flex w100">
        <div class="inline-flex w100 ma">
          <div class="c1">
            <i class="fas fa-coins fs20 mr10 w25"></i>
          </div>
          <div>
          <span class="c1 fs16 fw7">
            <%= number_with_delimiter((EtatBudget.first.budget_total/1000000).round, :delimiter => ' ') %> M€</span><br>
            <span class='c6 fs16 fw5'>Budget initial</span>
          </div>
        </div>
      </div>
      <div class="i32"></div>

      <div class="inline-flex w100">
        <div class="inline-flex w100 ma">
          <div class="c1">
            <i class="fas fa-coins fs20 mr10 w25"></i>
          </div>
          <div>
            <span class="c1 fs16 fw7">
          <%= number_with_delimiter((EtatBudget.last.budget_total/1000000).round, :delimiter => ' ') %> M€</span><br>
            <span class='c6 fs16 fw5'>Budget actuel</span>
          </div>
        </div>
      </div>
      <div class="i60"></div>

      
      <div class="inline-flex w100">
        <div class="inline-flex w100 ma">
          <div class="c1">
             <i class="fas fa-euro-sign fs20 mr10 w25"></i>
          </div>
          <div>
            <span class="c1 fs16 fw7">
            <%= number_with_delimiter((EtatDepense.where('date >= ?', Date.new(2021,1,1)).sum('cp_prevu')/1000000).round, :delimiter => ' ') %> M€</span><br>
            <span class='c6 fs16 fw5'>Budget 2021</span>
          </div>
        </div>
      </div>

      <div class="i32"></div>
      <div class="inline-flex w100">
        <div class="inline-flex w100 ma">
          <div class="c1">
             <i class="fas fa-euro-sign fs20 mr10 w25"></i>
          </div>
          <div>
            <span class="c1 fs16 fw7">
            <%= number_with_delimiter((EtatDepense.where('date >= ?', Date.new(2021,1,1)).sum('cp_conso')/1000000).round, :delimiter => ' ') %> M€</span><br>
            <span class='c6 fs16 fw5'>Dépenses 2021</span>
          </div>
        </div>
      </div>


      <div class="i32"></div>
      <div class="inline-flex w100">
        <div class="inline-flex w100 ma">
          <div class="c1">
             <i class="fas fa-euro-sign fs20 mr10 w25"></i>
          </div>
          <div>
            <span class="c1 fs16 fw7"><%= number_with_delimiter(((EtatDepense.sum('ae_conso')-EtatDepense.sum('cp_conso'))/1000000).round, :delimiter => ' ') %> M€</span><br>
            <span class='c6 fs16 fw5'>Reste à payer (AE-CP)</span>
          </div>
        </div>
      </div>

    </div>

      <div class="col-md-8 col-sm-7 col-xs-12">
        <div id="container-bar1"></div>
        <div class="i60"></div>
        <div id="container-bar-all"></div> 
      </div>
  </div>

</div>
<div class="i24"></div>
<% end %>

<script>
  $('.infos-details').hide();
  $('.info').mouseover(function() {
    $('.infos-details').show();
    })
  $('.info').mouseout(function() {
    $('.infos-details').hide();
    })

</script>


<script>

  Highcharts.chart('container-bar-all', {
    chart: {
        type: 'column',
    height:'200px',
    marginTop:20,
      backgroundColor: '#fff',
          style:{
          fontFamily: "Marianne Regular",
     
          },
    },
    title: {
        text: 'Répartition et suivi du budget par action',
        verticalAlign: "top",
        style: {
                  color: "#8F8F8F",
                  fontWeight: "400",
         
          fontSize: '12px',
                  },
    },

    xAxis: {
        categories: ['Solideo', 'Cojo',  "Héritage", "Autres" ],
        crosshair: true
    },
    yAxis: {
        min: 0,
        title: {
            text: 'Budget (M€)'
        },
      gridLineColor: "#fff",
    },
  legend: {
    enabled: false,
  },
    tooltip: {
        headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
        pointFormat: '<tr><td style="padding:0"><b>{series.name} : </b></td>' +
            '<td style="padding:0"><b> {point.y:.1f} M€</b></td></tr>',
        footerFormat: '</table>',
        shared: true,
        useHTML: true,
       borderColor: 'transparent',
   borderRadius: 16,
   backgroundColor: '#fff',
    },
    plotOptions: {
        column: {
            pointPadding: 0.2,
            borderWidth: 0,
            grouping: false,
          dataLabels: {
                enabled: true
            }
        }
    },
    series: [{
        name: 'Budget Total prévu',
        data: [
        {y:<%=(@etat_budget_actuel.budget_solideo/1000000).round%>, color:"#bfbfbf",dataLabels: {
                    enabled: true,
                    formatter: function() {

                      var point = this;                      
                      ecart = <%= ((@etat_budget_actuel.budget_solideo-EtatBudget.order('date DESC').last.budget_solideo)/1000000).round %>;
                      
                      number = Highcharts.numberFormat(point.y, -1, ',',' ');
                      
                       if (ecart >= 0){
                          header = '<span style="font-size: 10px;color:#20E37B"> +' + ecart  + '</span><br/>';
                        }else{
                          header = '<span style="font-size: 10px;color:#E1000F">' + ecart  + '</span><br/>';
                        }
                        
                        content = '<b>' + number  + ' </b>';

                      return header + content;
                    },
                }, },
        {y:<%=(@etat_budget_actuel.budget_cojo/1000000).round%>, color:"#bfbfbf",dataLabels: {
                    enabled: true,
                    formatter: function() {

                      var point = this;                      
                      ecart = <%= ((@etat_budget_actuel.budget_cojo-EtatBudget.order('date DESC').last.budget_cojo)/1000000).round %>;
                      
                      number = Highcharts.numberFormat(point.y, -1, ',',' ');
                      
                       if (ecart >= 0){
                          header = '<span style="font-size: 10px;color:#20E37B"> +' + ecart  + '</span><br/>';
                        }else{
                          header = '<span style="font-size: 10px;color:#E1000F">' + ecart  + '</span><br/>';
                        }
                        
                        content = '<b>' + number  + ' </b>';

                      return header + content;
                    },
                }, },
        {y:<%= (@etat_budget_actuel.budget_heritage/1000000).round%>, color: "#bfbfbf",dataLabels: {
                    enabled: true,
                    formatter: function() {

                      var point = this;                      
                      ecart = <%= ((@etat_budget_actuel.budget_heritage-EtatBudget.order('date DESC').last.budget_heritage)/1000000).round %>;
                      
                      number = Highcharts.numberFormat(point.y, -1, ',',' ');
                      
                       if (ecart >= 0){
                          header = '<span style="font-size: 10px;color:#20E37B"> +' + ecart  + '</span><br/>';
                        }else{
                          header = '<span style="font-size: 10px;color:#E1000F">' + ecart  + '</span><br/>';
                        }
                        
                        content = '<b>' + number  + ' </b>';

                      return header + content;
                    },
                },},
        {y:<%=(@etat_budget_actuel.budget_hauteperformance/1000000).round%>, color: "#bfbfbf",dataLabels: {
                    enabled: true,
                    formatter: function() {

                      var point = this;                      
                      ecart = <%= ((@etat_budget_actuel.budget_hauteperformance-EtatBudget.order('date DESC').last.budget_hauteperformance)/1000000).round %>;
                      
                      number = Highcharts.numberFormat(point.y, -1, ',',' ');
                      
                       if (ecart >= 0){
                          header = '<span style="font-size: 10px;color:#20E37B"> +' + ecart  + '</span><br/>';
                        }else{
                          header = '<span style="font-size: 10px;color:#E1000F">' + ecart  + '</span><br/>';
                        }
                        
                        content = '<b>' + number  + ' </b>';

                      return header + content;
                    },
                },}],
        pointPlacement: 0,
    },{
        name: 'Payés',
        data: [{y:<%= (EtatDepense.where('beneficiaire = ?', "solideo",).sum('cp_conso')/1000000).round%> , color:"#5770BE" },{y:<%= (EtatDepense.where('beneficiaire = ?', "cojo",).sum('cp_conso')/1000000).round%> , color:"#76505B" },{y:<%= (EtatDepense.where('beneficiaire = ?', "hauteperformance",).sum('cp_conso')/1000000).round%> , color: "#FFE800"},{y:<%= (EtatDepense.where('beneficiaire = ?', "heritage",).sum('cp_conso')/1000000).round%> , color: "#D08A77"}],
        pointPlacement: 0,

    }]
});
</script>

<script>
  Highcharts.chart('container-bar1', {
    chart: {
        type: 'column',
    height:'200px',
    marginTop:20,
      backgroundColor: '#fff',
          style:{
          fontFamily: "Marianne Regular",
     
          },
    },
    title: {
       text: 'Suivi annuel des dépenses',
       verticalAlign: "top",
        style: {
                  color: "#8F8F8F",
                  fontWeight: "400",
    
          fontSize: '12px',
                  },
    },

    xAxis: {
        categories: ['Dépenses 2018', 'Dépenses 2019',  "Dépenses 2020", "Dépenses 2021", "Budget 2021","Dépenses Cumul",'AE conso cumul'],
        crosshair: true
    },
    yAxis: {
        min: 0,
        title: {
            text: 'Budget Consommé (M€)'
        },
      gridLineColor: "#fff",
    },
  legend: {
    enabled: false,
  },
    tooltip: {
        headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
        pointFormat: '<tr><td style="padding:0"><b>{series.name} : </b></td>' +
            '<td style="padding:0"><b> {point.y:.1f} M€</b></td></tr>',
        footerFormat: '</table>',
        shared: true,
        useHTML: true,
       borderColor: 'transparent',
   borderRadius: 16,
   backgroundColor: '#fff',
    },
    plotOptions: {
        column: {
            pointPadding: 0.2,
            borderWidth: 0,
            grouping: false,
          dataLabels: {
                enabled: true
            }
        }
    },
    series: [{
        name: 'Budget',
        data: [{y:<%= (EtatDepense.where('date >= ? AND date <= ?', Date.new(2018,1,1), Date.new(2018,12,31)).sum('cp_conso')/1000000).round %>, color: "#2E5D63" },
          {y:<%=(EtatDepense.where('date >= ? AND date <= ?', Date.new(2019,1,1), Date.new(2019,12,31)).sum('cp_conso')/1000000).round%>, color:"#2E5D63" },
          {y:<%=(EtatDepense.where('date >= ? AND date <= ?', Date.new(2020,1,1), Date.new(2020,12,31)).sum('cp_conso')/1000000).round%>, color: "#2E5D63"},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ?', Date.new(2021,1,1), Date.new(2021,12,31)).sum('cp_conso')/1000000).round%>, color: "#2E5D63"},
          {y:<%=(EtatDepense.where('date >= ? AND date <= ?', Date.new(2021,1,1), Date.new(2021,12,31)).sum('cp_prevu')/1000000).round%>, color: "#bfbfbf"},
          {y:<%=(EtatDepense.all.sum('cp_conso')/1000000).round%>, color: "#76505B"},
          {y:<%=(EtatDepense.all.sum('ae_conso')/1000000).round%>, color: "#20E37B"}],
        pointPlacement: 0,
    },]
});
 </script> 