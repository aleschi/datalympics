<div class="EB_page">

  <h1 class="EB_title">Le budget de l'Etat pour la Solideo</h1>
  <div class="SD-topo-box">
    <div class="SD-topo-box-title">
      <span>Le Budget de l'état pour la solideo en chiffres</span>
    </div><br><br>
    <div class="row">
      <div class="col-md-4">
        <div class="calendar-infos">
          <div class="calendar-infos-box">
        <div>
          <i class="fas fa-coins"></i>
        </div>
        <div>
          <%= number_with_delimiter(EtatBudget.last.budget_solideo.to_i, :delimiter => ' ') %> €<br>
          <span>Budget prévu initial </span>
        </div>
      </div>
        </div><br><br>     
        <div class="calendar-infos">
          <div class="calendar-infos-box">
          <div>
           <i class="fas fa-coins"></i>
          </div>
          <div>
          <%= number_with_delimiter(EtatBudget.last.budget_solideo.to_i, :delimiter => ' ') %> €<br>
          <span>Budget prévu actuel </span>
          </div>
        </div>
      </div><br><br><br><br>
        <div class="calendar-infos">
          <div class="calendar-infos-box">
        <div>
           <i class="fas fa-euro-sign"></i>
        </div>
        <div>
          <%= number_with_delimiter(EtatDepense.where('beneficiaire=?','solideo').sum('cp_conso').to_i, :delimiter => ' ') %> €<br>
          <span>Financement prévu à date </span>
        </div>
      </div>
        </div><br><br>
        <div class="calendar-infos">
          <div class="calendar-infos-box">
        <div>
           <i class="fas fa-euro-sign"></i>
        </div>
        <div>
          <%= number_with_delimiter(EtatDepense.where('beneficiaire=?','solideo').sum('cp_conso').to_i, :delimiter => ' ') %> €<br>
          <span>Financement actuel</span>
        </div>
      </div>
        </div><br><br>
       
        <div class="calendar-infos">
          <div class="calendar-infos-box">
        <div>
        <i class="fas fa-euro-sign"></i>
        </div>
        <div>
        <%= ((EtatDepense.where('beneficiaire=?','solideo').sum('cp_conso')/EtatBudget.last.budget_solideo)*100).round %>%<br>
          <span>Financement alloué</span>
        </div>
      </div>
        </div><br><br>
        
      </div>
      <div class="col-md-8">
        <div id="container-pie">
       
      </div>
      </div>
    </div>
  </div>
  
  <div class="SD-topo-box">
  <div class="SD-topo-box-title">
    <span>Maquette annuelle de répartition des financements de la Solideo (k€)</span>
  </div><br><br>
    
    <div class="ED_table">
      <table>
        <thead>
          <tr>
            <th scope="col">Dates</th>
            
            <th scope="col">2018</th>
            <th scope="col">2019</th>
            <th scope="col">2020</th>
            <th scope="col">2021</th>
            <th scope="col">2022</th>
            <th scope="col">2023</th>
            <th scope="col">2024</th>
            <th scope="col">2025 </th>
            <th scope="col" class="border-none">Total </th>
          </tr>
        </thead>
        <tbody>
        
          <tr>
            <th scope="row">Maquette 2018</th>
              <td>48 960</td>
              <td>63 396</td>
              <td>120 000</td>
              <td>200 000</td>
              <td>200 000</td>
              <td>190 000</td>
              <td>70 000</td>
              <td>40 501</td>
              <td class="financement-reel">932 857</td>
           </tr>
          <tr>
            <th scope="row">Maquette 2019</th>
              <td class="financement-reel">48 000 <i class="fas fa-long-arrow-alt-down"></i></td>
              <td>63 396</td>
              <td>120 000</td>
              <td>200 000</td>
              <td>200 000</td>
              <td>190 000</td>
              <td>70 000</td>
              <td>40 501</td>
              <td class="financement-reel">932 857</td>
           </tr>
          <tr>
            <th scope="row">Maquette 2020</th>
              <td></td>
              <td>XX REEL</td>
              <td>X</td>
              <td>X <i class="fas fa-long-arrow-alt-down"></i></td>
              <td>X <i class="fas fa-long-arrow-alt-up"></i></td>
              <td>X</td>
              <td>X</td>
              <td>X</td>
             <td class="financement-reel">X</td>
           </tr>
        
        </tbody>
      </table>
    </div>
    <div>Commentaires évolution des maquettes </div>
  </div>
  
  <div class="SD-topo-box">
  <div class="SD-topo-box-title">
    <span>Détails des financements en K€</span>
  </div><br><br>
    <div class="row">
      <div class="col-md-6">

        <div id="container-1"></div>
             
     </div>
     <div class="col-md-6">
        <div id="container-2"></div>
      
     </div>
     
  </div>
    <br>
    <div class="ED_table_filtres">
      <a type="button" data-toggle="modal" data-target="#filtres" ><i class="fas fa-sliders-h"></i> Filtrer </a>
    </div>
    <div class="ED_table">
      <table>
        <thead>
          <tr>
            <th scope="col">Dates</th>
            
            <th scope="col">Titre</th>
            <th scope="col">Catégorie</th>
            <th scope="col">AE prévus</th>
            <th scope="col">AE consommés</th>
            <th scope="col">CP prévus</th>
            <th scope="col">CP consommés</th>
            <th scope="col" class="border-none"> </th>
          </tr>
        </thead>
        <tbody>
          <% @etat_depenses.each do |etat_depense| %>
          <tr>
            <th scope="row"><%= etat_depense.date.strftime("%Y") %></th>
          
            <td><%= etat_depense.titre %></td>
            <td><%= etat_depense.categorie %></td>
            <td><%= number_with_delimiter((etat_depense.ae_prevu/1000).to_i, :delimiter => ' ') %> k€</td>
            <td><%= number_with_delimiter((etat_depense.ae_conso/1000).to_i, :delimiter => ' ') %> k€ <% if etat_depense.ae_conso.to_i > etat_depense.ae_prevu.to_i %><i class="fas fa-exclamation-circle"></i><% end %></td>
            <td><%= number_with_delimiter((etat_depense.cp_prevu/1000).to_i, :delimiter => ' ') %> k€</td>
            <td><%= number_with_delimiter((etat_depense.cp_conso/1000).to_i, :delimiter => ' ') %> k€ <% if etat_depense.cp_conso.to_i > etat_depense.cp_prevu.to_i %><i class="fas fa-exclamation-circle"></i><% end %></td>
            <td class="border-none"> <%= link_to edit_etat_depense_path(etat_depense) do %> <i class="fas fa-pen"></i><% end %>
            <%= link_to etat_depense, method: :delete, data: {confirm: "confirmer la suppression?"} do %> <i class="fas fa-trash-alt"></i><% end %></td>
          </tr>
          <% end %>
        </tbody>
      </table>
    </div>
  </div>
</div>
</div>

<script>

  $('.menu-budget-solideo').addClass('menu-active2'); 
  $('.menu-budget-etat').addClass('menu-active'); 

  $('#MonCollapse2').addClass('in'); 

</script>

<script>
Highcharts.chart('container-pie', {
    chart: {
        plotBackgroundColor: null,
        plotBorderWidth: null,
        plotShadow: false,
        type: 'pie',
        backgroundColor: '#fff',
          style:{
          fontFamily: "Spectral",
    
          },
      height: '350px',
    },
    title: {
         text:null,   
          style: {
                  color: "#8F8F8F",
                  fontWeight: "400",
                  fontStyle: "italic",
                  fontSize: '16px',
                  },
    },
  colors: ['#2E5D63','#C68D7B', '#20E37B','#5770BE'],
    tooltip: {
        pointFormat: '{series.name}: <b>{point.y:,.0f}€ </b>'
    },
    accessibility: {
        point: {
            valueSuffix: '%'
        }
    },
    plotOptions: {
        pie: {
            allowPointSelect: true,
            cursor: 'pointer',
           size: 250,
            dataLabels: {
                enabled: true,
                format: '<b>{point.name}</b><br>{point.y:,.0f}€ - {point.percentage:.1f} %',
              style: {
                      color: "#8F8F8F",
                      fontSize: "11px",
                      fontWeight: "400",
                      fontStyle: "italic",
                      },
            }
        }
    },
    series: [{
        name: 'Total',
        colorByPoint: true,
        data: [{
            name: 'Ouvrages',
            y: 769867000,
            sliced: true,
            selected: true
        }, {
            name: 'Fonctionnement',
            y: 72975000,
        }, {
            name: 'Innovation',
            y: 23382000,
        }, {
            name: 'Réserve',
            y: 66633000,
        }]
    }]
});
</script>

<script>
Highcharts.chart('container-1', {

   chart:{
            backgroundColor: '#fff',
           type: 'spline',
            spacing: [40,40,40,40],
        style:{
          fontFamily: "Spectral",
         
          },
       
          },

      title: {
        text:"CP consommés VS CP prévus",
        margin:40,
        style: {
                  color: "#8F8F8F",
                  fontWeight: "400",
          fontStyle: 'italic',
      fontSize: '16px',
                  },
      },
colors: ['#bfbfbf','#2E5D63'],
    yAxis: {
      gridLineColor: '#fff', 
        title: {
            text: 'Montant K€'
        }
    },
  tooltip: {
      //  pointFormat: '{series.name}: <b>{point.y}</b><br/>',
        valueSuffix: 'K€',
        xDateFormat: '%Y',
    },
  xAxis:{
      max: 2021,
  },
    plotOptions: {
        series: {
            label: {
                connectorAllowed: false
            },
            pointStart: 2018,

        }
    },

  

    series: [{
        name: 'CP prévus',
        data: <%=  @cp_prevu_annee %>,
    }, {
        name: 'CP consommés',
        data: <%=  @cp_annee %>,
    }],

    responsive: {
        rules: [{
            condition: {
                maxWidth: 500
            },
            chartOptions: {
                legend: {
                    layout: 'horizontal',
                    align: 'center',
                    verticalAlign: 'bottom'
                }
            }
        }]
    }

});
</script>

<script>
Highcharts.chart('container-2', {

   chart:{
            backgroundColor: '#fff',
           type: 'spline',
            spacing: [40,40,40,40],
        style:{
          fontFamily: "Spectral",
         
          },
       
          },

      title: {
        text:"AE consommés VS AE prévus",
        margin:40,
        style: {
                  color: "#8F8F8F",
                  fontWeight: "400",
          fontStyle: 'italic',
      fontSize: '16px',
                  },
      },
colors: ['#bfbfbf','#2E5D63'],
    yAxis: {
      gridLineColor: '#fff', 
        title: {
            text: 'Montant K€'
        }
    },
  tooltip: {
      //  pointFormat: '{series.name}: <b>{point.y}</b><br/>',
        valueSuffix: 'K€',
        xDateFormat: '%Y',
    },
  xAxis:{
      max: 2021,
  },
    plotOptions: {
        series: {
            label: {
                connectorAllowed: false
            },
            pointStart: 2018,

        }
    },

  

    series: [{
        name: 'AE prévus',
        data: <%=  @ae_prevu_annee %>,
    }, {
        name: 'AE consommés',
        data: <%=  @ae_annee %>,
    }],

    responsive: {
        rules: [{
            condition: {
                maxWidth: 500
            },
            chartOptions: {
                legend: {
                    layout: 'horizontal',
                    align: 'center',
                    verticalAlign: 'bottom'
                }
            }
        }]
    }

});
</script>
