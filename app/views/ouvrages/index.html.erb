<script src="https://cdnjs.cloudflare.com/ajax/libs/proj4js/2.3.6/proj4.js"></script>

<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
  <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
  <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
   
<div class="SD_page">
  <div class="SD_home_button">
    <%= link_to root_path do %><i class="fas fa-chevron-left"></i><i class="fas fa-home"></i>Retour accueil<%end %>
  </div>
    <h1 class="SD_title">Les ouvrages des JOP2024 </h1>
  
  <div  class="SD-table-box">
  <div class="SF-topo-financeurs-title"><span>Les ouvrages en chiffres </span></div><br><br>
  <div class="calendar-infos">
    <div class="calendar-infos-box">
      <div>
        <i class="fas fa-coins"></i>
      </div>
      <div>
        <%= number_with_delimiter(OuvragesDepense.all.sum('montant_prevu').to_i, :delimiter => ' ') %> €<br>
        <span>Budget Total</span>
      </div>
    </div>
    <div class="calendar-infos-box">
      <div>
      <i class="fas fa-building"></i>
      </div>
      <div>
      59<br>
      <span>ouvrages</span>
      </div>
    </div>
    <div class="calendar-infos-box">
      <div>
      <i class="fas fa-flag"></i>
      </div>
      <div>
      2%<br>
        <span>Ouvrages finalisés</span>
      </div>
    </div>

  </div><br><br>
  <div class="calendar-infos">
    <div class="calendar-infos-box">
      <div>
         <i class="fas fa-euro-sign"></i>
      </div>
      <div>
        <%= number_with_delimiter(OuvragesDepense.all.sum('montant').to_i, :delimiter => ' ') %> €<br>
        <span><%=link_to ouvrages_depenses_path do %>Dépenses actuelles<% end %></span>
      </div>
    </div>
    <div class="calendar-infos-box">
      <div>
     <i class="fas fa-tools"></i>
      </div>
      <div>
      222<br>
      <span>Chantiers </span>
      </div>
    </div>
    <div class="calendar-infos-box">
      <div>
      <i class="fas fa-people-carry"></i>
      </div>
      <div>
      82<br>
        <span>Employés</span>
      </div>
    </div>

  </div>
  </div><br><br>

 <div  class="SD-table-box">
  <div class="SF-topo-financeurs-title"><span>Carte des ouvrages</span></div><br><br>
  <div class="row">
     <div class="col-md-6">
           <%= search_form_for @q, url: recherche_ouvrages_path , id: "search-form", method: :get, remote: true do |f| %>
        <div class="ouvrages-search">
           <%= f.search_field :name_cont,class: "ouvrages-search-field", id:"name",placeholder: "Cherchez un ouvrage", data: {autocomplete_source: ouvrages_path} %> 
          
        </div>
          <% end %>          
        
      <div class="ouvrages-box">
      <div id="ouvrages-results">

        <%= render 'ouvrages/liste'%>
                
        </div>
                
       </div>
    </div>


    <div class="col-md-6">
      <div id="map">
      
      </div>

    </div>
  </div>
  </div><br><br>
 
<div  class="SD-table-box">
  <div class="SF-topo-financeurs-title"><span>Les ouvrages par MOA </span></div><br><br>
  <div class="row">
     <div class="col-md-12">
       <div id="bubble">
         
       </div>
    </div>
  </div>
</div><br><br>
 
   <div class="SD-topo-box">
  <div class="SD-topo-box-title">
    <span>Evolution de la maquette budgétaire</span>
  </div><br><br>
    <div id="container-chart">
      
    </div><br>
    <div class="EB-details">
       <a href="#MonCollapse" role="button" data-toggle="collapse" aria-expanded="true" aria-controls="MonCollapse">Afficher le détail</a>      
    </div><br>
    <section id="MonCollapse" class="collapse">
    <div class="table-legend">
      <div class="table-title">
        Légende du graphique
      </div>
       <table >
        <tbody>   
          <tr>
            <th class="border-bottom">Inflation</td>
            <td class="border-bottom">augmentation du budget liée à l’inflation et à l’indexation (2%)</td>
         </tr>
          <tr>
            <th class="border-bottom">ajout ouvrages</td>
            <td class="border-bottom">ajout de l’ouvrage XXX en décidé en CA mars 2019 et de l’ouvrage YYYY décidé en CA septembre 2020</td>
         </tr>
          <tr>
            <th class="border-bottom">ajout programme </td>
            <td class="border-bottom">ajout du programme XXX sur l’ouvrage XXX pris en charge par la Metropole Grand Paris<br>
              ajout du programme YYY sur l’ouvrage YYY pris en charge par la Ville de Paris<br>
              ajout du programme ZZZ sur l’ouvrage ZZZ </td>
         </tr>
          <tr>
            <th class="border-bottom">surcoûts construction</td>
            <td class="border-bottom">anticipation de l’inflation au-delà de 2020</td>
         </tr>
          <tr>
            <th class="border-bottom">suppresion ouvrages  </td>
            <td class="border-bottom">supression de l’ouvrage XXX en décidé en CA mars 2019 et de l’ouvrage YYYY décidé en CA septembre 2020</td>
         </tr>
          <tr>
            <th>suppresion programme  </td>
            <td>suppression du programme XXX sur l’ouvrage XXX </td>
         </tr>
        </tbody>
      </table>
     </div>
<br><br>
<div class="EB-details">
       <%= link_to ouvrages_depenses_path do %>En savoir plus sur les dépenses <i class="fas fa-th-list"></i><% end %>      
    </div><br>
    </section>
  </div>

</div>
<script>

  $(function() {
  var matieres = ["Stade de france", "Arena 2"]
  // Below is the name of the textfield that will be autocomplete    
    $('#name').autocomplete({
 // This is the source of the auocomplete suggestions. In this case a list of names from the people controller, in JSON format.
     
      //$('#name').data('autocomplete-source'),
            source:matieres,
      select: function(event, ui) {
        $.ajax({
          type:'GET',
          url: '/recherche-ouvrages'
        });
    },
        })
     .data("ui-autocomplete")._renderItem = function(ul, item){
       var expression = new RegExp(this.term, "gi");
      var result = expression.exec(item.label);
      var answer; 
      if (result.index == 0){
        answer = item.label.replace(expression, "<span style='font-weight:bold;color:#3233FF'>" + this.term + "</span>");
        return $("<li></li>")
      .append("<a>"+answer+"</a>")
      .prependTo(ul);
      }   
      else
       answer = item.label.replace(expression, "<span style='font-weight:bold;color:#3233FF'>" + this.term.toLowerCase() + "</span>");
      return $("<li></li>")
      .append("<a>"+answer+"</a>")
      .appendTo(ul);
     
    };
    
  });
</script>
<script>
Highcharts.chart('bubble', {
    chart: {
        type: 'packedbubble',
        height: '400',
       style:{
            fontFamily: "Spectral",
            },
    },
    title: {
        text: "",
      style: {
            color: '#8F8F8F',
            fontSize: '16px',
            fontStyle: 'italic',
            }
    },
    tooltip: {
        useHTML: true,
        pointFormat: '<b>{point.name}:</b> {point.value} €</sub>'
    },
    plotOptions: {
        packedbubble: {
            minSize: '20%',
            maxSize: '80%',

            layoutAlgorithm: {
                splitSeries: true,
                gravitationalConstant: 1,
              bubblePadding: 30,
              enableSimulation: false,
        
            },
          animation: {
           duration: 1, 
          },
         
            dataLabels: {
                enabled: true,
                format: '{series.name}',
              allowOverlap: false,
              crop:true,
              inside: false,
                style: {
                    color: 'black',
                    textOutline: 'none',
                    fontWeight: 'normal'
                }
            }
        }
    },
    series: [
      <% @maitre_oeuvre_all.each do |mo|%>
      
      {
        name: '<%= mo %>',
        data: [
        <% @ouvrages.where('maitre_oeuvre = ?', mo).each do |ouvrage| %>
        {
            name: "<%= ouvrage.name %>",
            value: <%= ouvrage.budget.to_i %>,
         dataLabels: {
           enabled:false,
         },
        events: {
                    click: function () {
                        location.href = '/ouvrages/<%= ouvrage.id%>'
                    }
                }
        }, 
       <%end%>],
  
    }, 
                 <% end%>  ],
});
</script>

 <script
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCzB6sn07VIK_DzRsbm87THvZtEO1qPaNg&map_ids=4c4b12db708d00c6&callback=initMap"
      defer
    ></script>
<script>

function initMap() {
  var map = new google.maps.Map(document.getElementById("map"), {
    mapId: "4c4b12db708d00c6",
    center: { lat: 48.866667, lng: 2.333333 },
    zoom: 11,
    
  });

  var infowindow = new google.maps.InfoWindow({
                         content:''
                       });
              var image = {
                          path: 'M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z',
                          fillColor: '#000091',
                          fillOpacity: 1,
                          scale: 0.5,
                          strokeColor: '#000091',
                          strokeWeight: 1,
                          labelOrigin: new google.maps.Point(0, -30)
                        };
              var image2 ={
                          path: 'M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z',
                          fillColor: '#000091',
                          fillOpacity: 1,
                          scale: 0.6,
                          strokeColor: '#000091',
                          strokeWeight: 1,
                          labelOrigin: new google.maps.Point(0, -30)
                        };
  
  
        <% @ouvrages.each do |ouvrage| %>
                        
                var marker = new google.maps.Marker({
                                position: {lat: <%= ouvrage.latitude%>, lng: <%= ouvrage.longitude%>},
                                map: map,
                                icon: image,
                                map_icon_label: '<span class="map-icon map-icon-hardware-store"></span>',
                              });
                
                      
                          
                bindInfoWindow(marker, map, infowindow, '<div class="search-container-fluid">'+ '<p class="search-name"><%= link_to ouvrage_path(ouvrage) do %><%= ouvrage.name%><% end %></p>'+ '</div>');
       
                  AddMouseover(marker, image, image2);
                      
                <% end %>
                }
                      
                function bindInfoWindow(marker, map, infowindow, html) {   
                   
                        google.maps.event.addListener(marker,'click', function() {
                              infowindow.setContent(html); 
                              infowindow.open(map, marker);
                            });
                       google.maps.event.addListener(infowindow, 'domready', function() {
                       // Reference to the DIV which receives the contents of the infowindow using jQuery
                       var iwOuter = $('.gm-style-iw');
                       var iwBackground = iwOuter.prev();
                       // Remove the background shadow DIV
                       iwBackground.children(':nth-child(2)').css({'display' : 'none'});
                       // Remove the white background DIV
                       iwBackground.children(':nth-child(4)').css({'display' : 'none'});
                       // iwOuter.children().css({'width':'100%'})
                       //iwOuter.parent().parent().css({left: '20px'});
                                      // Moves the shadow of the arrow 76px to the left margin 
                       // iwBackground.children(':nth-child(1)').attr('style', function(i,s){ return s + 'right: 20px !important;'});
                        // Moves the arrow 76px to the left margin 
                       // iwBackground.children(':nth-child(3)').attr('style', function(i,s){ return s + 'right: 20px !important;'});
                                      // Changes the desired color for the tail outline.
                        // The outline of the tail is composed of two descendants of div which contains the tail.
                        // The .find('div').children() method refers to all the div which are direct descendants of the previous div. 
                        iwBackground.children(':nth-child(3)').find('div').children().css({'box-shadow': 'rgba(130,153,247,0.2) 0px 1px 6px', 'z-index' : '1'});
                        var iwCloseBtn = iwOuter.next();
                        // Apply the desired effect to the close button
                        iwCloseBtn.css({
                          opacity: '1', // by default the close button has an opacity of 0.7
                          right: '20px', top: '3px', // button repositioning
                          color: '#3233FF',
                          //border: '1px solid transparent', // increasing button border and new color
                          //'border-radius': '13px', // circular effect
                          //'box-shadow': '0 0 5px #fff' // 3D effect to highlight the button
                          });
                        // The API automatically applies 0.7 opacity to the button after the mouseout event.
                        // This function reverses this event to the desired value.
                        iwCloseBtn.mouseout(function(){
                          $(this).css({opacity: '1'});
                        })
                      });
                    }
                function AddMouseover(marker, image, image2){
                        google.maps.event.addListener(marker,'mouseover', function() {
                              marker.setIcon(image2);
                              var label = this.getLabel();
                                label.color="#3233FF";
                              this.setLabel(label)
                            });
                        google.maps.event.addListener(marker,'mouseout', function() {
                              marker.setIcon(image);
                              var label = this.getLabel();
                                label.color="white";
                              this.setLabel(label)
                            });
                      
                }
                     
                      
</script>


<script>
Highcharts.chart('container-chart', {
    chart: {
        type: 'waterfall',
      spacing: [40,40,40,40],
        style:{
          fontFamily: "Spectral",
          },
    },

    title: {
        text: 'Evolution de la maquette des dépenses des ouvrages ',
      margin:40,
        style: {
                  color: "#8F8F8F",
                  fontWeight: "400",
          fontStyle: 'italic',
      fontSize: '16px',
                  },
    },

    xAxis: {
        type: 'category'
    },

    yAxis: {
      gridLineColor: '#E6F0FF', 
        title: {
            text: 'Montant €'
        }
    },

    legend: {
        enabled: false
    },

    tooltip: {
        pointFormat: '<b>${point.y:,.2f}</b> €'
    },

    series: [{
      borderColor: '#fff',
      data: [{
            name: 'Prévisionnel 2018',
            y: 1386929000,
            color: "#8F8F8F",
        }, {
            name: 'Inflation ',
            y: 13100000,
            color: "#F1013B",
        }, {
            name: 'Nouveaux Ouvrages',
            y: 19635800,
            color: "#F1013B",
        }, {
            name: 'Nouveaux programmes ',
            y: 500000000,
            color: "#F1013B",
        },{
            name: 'Surcoûts construction',
            y: 83100000,
            color: "#F1013B",
        }, {
            name: "Suppression d'ouvrages",
            y: -585000000,
          color: "#48AF5C",
        }, {
            name: "Suppression de programmes",
            y: -185000000,
          color: "#48AF5C",
        }, {
            name: 'Prévisionnel 2020',
            isSum: true,
            color: Highcharts.getOptions().colors[1]
        }],
        dataLabels: {
            enabled: true,
            formatter: function () {
                return Highcharts.numberFormat(this.y / 1000, 0, ',') + 'k';
            },
          
            style: {
                fontWeight: 'bold',
                color: '#000',
            
              fontFamily: 'Karla',
            }
        },
        pointPadding: 0
    }]
});
</script>